{"version":3,"sources":["Utilities/agent.js","Assets/img/bg.png","Containers/Pages/Homepage/Homepage.js","Containers/System/System.js","Hooks/http-hook.js","Components/ThemeSwitcher/style.js","Redux/ThemeSwitcher/actions.js","Components/ThemeSwitcher/ThemeStore/light.js","Components/ThemeSwitcher/ThemeStore/dark.js","Components/ThemeSwitcher/ThemeStore/index.js","Components/ThemeSwitcher/index.js","Containers/Pages/TestLogin/TestLogin.js","Components/SelectWithTyping/SelectWithTyping.js","Components/ButtonWithLoading/ButtonWithLoading.js","Components/LocationPicker/LocationPicker.js","Components/Input-Email/InputEmail.js","Components/AddNewStudent/AddNewStudent.js","Components/Statistic/Statistic.js","Components/TextTranslation/TextTranslation.js","Components/StudentScoresTable/StudentScoresTable.js","Containers/ClassDetails/ClassDetails.js","Components/BigCalendar/BigCalendar.js","Containers/Schedule/Schedule.js","Containers/Profile/Profile.js","Routes/LoggedRoutes.js","Containers/Pages/Setup/styles.js","Components/Setup/Database/style.js","Components/Setup/Database/index.js","Components/Setup/Database/Form/mysql.js","Components/Setup/Database/Form/mssql.js","Components/Setup/Database/Form/sqlite.js","Components/Setup/Information/style.js","Components/Setup/Finish/style.js","Components/Setup/System/style.js","Components/Setup/Loader/style.js","Components/Setup/Loader/index.js","Containers/Pages/Setup/config.js","Containers/Pages/Setup/index.js","Components/Setup/Information/index.js","Components/Setup/Finish/index.js","Routes/GuestRoutes.js","Components/LAMenu/LAMenu_Structure.js","Components/TopBar/TopBar.js","App/MainLayout/MainLayout.js","Redux/Actions/updateClassData.js","App/LoggedRoutes/LoggedRoutes.js","App/GuestRoutes/GuestRoutes.js","App/App.js","Redux/Reducers/classData.js","Redux/ThemeSwitcher/reducers.js","Redux/root-reducer.js","Redux/root-saga.js","Redux/store.js","ErrorBoundary.js","AppProvider.js","i18n.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","window","location","protocol","hostname","port","responseBody","encodeURIComponent","res","body","tokenPlugin","req","requests","url","get","use","then","post","Auth","login","username","password","email","Setup","status","setToken","_token","module","exports","Homepage","useState","isLoading","setIsLoading","useEffect","setTimeout","className","direction","style","width","loading","title","SSystem","i18n","useTranslation","menu","onClick","lang","key","changeLanguage","Item","target","rel","overlay","e","preventDefault","DownOutlined","useHttpClient","activeHttpRequests","useRef","sendRequest","useCallback","a","method","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","forEach","abortCtrl","abort","ThemeSwitcherWrapper","styled","div","palette","actions","CHANGE_THEME","changeTheme","theme","type","background","text","primary","pre","themes","light","dark","props","dispatch","useDispatch","onChange","checked","checkedChildren","unCheckedChildren","TestLogin","setUsername","setPassword","pwClass","setPwClass","id","placeholder","evt","value","onFocus","onBlur","agent","console","log","localStorage","setItem","token","reload","href","ThemeSwitcher","Option","Select","SelectWithTyping","optionElms","classes","options","length","map","optionName","renderOptions","showSearch","optionFilterProp","callbackSelection","onSearch","val","filterOption","input","option","children","toLowerCase","indexOf","disabled","ButtonWithLoading","LocationPicker","areaInSelectedCity","setAreaInSelectedCity","mapAreasToArray","areas","result","Object","values","area","name","cityOptions","LocationVN","city","optionKey","selectedCity","cities","InputEmail","rules","marginBottom","AddNewStudent","visible","setVisible","onClose","classData","PlusOutlined","bodyStyle","paddingBottom","footer","textAlign","marginRight","layout","hideRequiredMark","gutter","span","label","required","message","getPopupContainer","trigger","parentNode","TextArea","rows","Statistic","statisticData","setStatisticData","modalVisible","setModalVisible","centered","onOk","onCancel","bordered","pClassName","pSubject","percent","strokeColor","TextTranslation","textName","kClass","t","columns","dataIndex","fixed","filters","onFilter","record","sorter","b","studentID","StudentScoresTable","classDetailsData","setClassDetailsData","tableData","setTableData","tableEditable","setTableEditable","renderClassDetailsData","data","i","coef","ScoreCoefficient","k15mins","k45mins","kmidterm","calculateFinalScore","keys","min","max","defaultValue","dataSource","size","scroll","x","y","expandable","connect","state","match","params","classCode","selectedClass","setSelectedClass","selectedSubject","setSelectedSubject","Panel","Collapse","selectedClassDetailsData","setSelectedClassDetailsData","isFetchingClassDetailsData","setIsFetchingClassDetailsData","useHistory","defaultActiveKey","expandIcon","isActive","CaretRightOutlined","rotate","header","Subjectslist","ms","response","json","resolve","students","success","catch","error","maxTimeLoading","marginLeft","backgroundColor","borderColor","danger","dateCellRender","listData","date","content","getListData","item","monthCellRender","num","month","getMonthData","BigCalendar","setValue","moment","selectedValue","setSelectedValue","margin","format","fullscreen","padding","onSelect","onPanelChange","Schedule","Profile","routes","path","exact","main","SetupPageWrapper","bgImage","StepWrapper","DatabaseWrapper","sqls","MYSQL","db","setDB","user","setUser","pass","setPass","host","setHost","setPort","prefix","setPrefix","db_server","db_name","tb_prefix","Password","MSSQL","SQLITE","InformationWrapper","FinishWrapper","LoaderWrapper","legoConfig","loop","autoplay","animationData","legoAnimation","rendererSettings","preserveAspectRatio","successConfig","doneAnimation","done","height","ParticleConfig","Step","Steps","SetupPage","setCurrent","loadProgress","setLoadProgress","CurrentStep","steps","component","Helmet","charSet","step","index","description","onNext","Loader","sql","setSQL","setError","setData","SqlForm","setName","setEmail","onSubmit","LAMenu_Structure","HomeOutlined","UserOutlined","ApartmentOutlined","FolderOutlined","TopBar","Divider","removeItem","count","shape","icon","Header","Layout","Content","Footer","Sider","SubMenu","Menu","resultMenuStructure","setResultMenuStructure","setClasses","renderLAMenuStructure","updateClassData","kStruct","isSubMenu","parentMenu","classesElm","kElm","str","to","displayName","classID","collapsed","setCollapsed","minHeight","collapsible","onCollapse","defaultSelectedKeys","mode","paddingTop","kRoutes","pathname","LoggedRoutes","route","showRoutes","GuestRoutes","App","getItem","loggedroutes","guestroutes","initialState","ClassData","action","initState","combineReducers","themeSwitcher","rootSaga","getState","all","sagaMiddleware","createSagaMiddleware","middlewares","thunk","store","next","v","payload","currentView","viewChangeCounter","skipTracking","currentState","middleware","createStore","rootReducer","applyMiddleware","run","maintenanceConfig","ErrorBoundary","hasError","this","React","Component","AppProvider","currentTheme","useSelector","locale","enUS","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","interpolation","escapeValue","ReactDOM","render","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.c13bcac0.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst API_ROOT = `${window.location.protocol}//${window.location.hostname}:${window.location.port}`;\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res.body;\r\n\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    //req.set('authorization', `${token}`);\r\n  }\r\n}\r\n\r\nconst requests = { //.withCredentials()\r\n  del: url =>\r\n    superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  put: (url, body) =>\r\n    superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody)\r\n};\r\n\r\nconst Auth = {\r\n  login: (username, password) =>\r\n      requests.post('/login/index.php', {email: username, password: password}),\r\n}\r\n\r\nconst Setup = {\r\n  status: () => requests.get('/setup/status')\r\n}\r\n\r\nexport default {\r\n  Auth,\r\n  Setup,\r\n  setToken: _token => { token = _token; }\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/bg.6b7a5417.png\";","import React,{useState, useEffect}  from 'react';\r\nimport { Space,Card } from 'antd';\r\nimport './Homepage.css';\r\n\r\n\r\nconst Homepage = () => {\r\n    \r\n    const mainSpaceStyle = {\r\n        width : \"10%\",\r\n        \r\n    }\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    useEffect(()=>{\r\n        setIsLoading(true);\r\n        setTimeout(()=>{setIsLoading(false)},500);\r\n    },[]);\r\n\r\n    return(\r\n\r\n        <div className=\"site-card-border-less-wrapper\">\r\n            <Space direction=\"horizontal\" style={mainSpaceStyle}>\r\n                <Card loading={isLoading} title=\"Events\" style={{ width: 300 }}>\r\n                    <p>SE104 - 1.2.3 in A 102</p>\r\n                    <p>IT007 - 6.7.8 in E 3.2</p>\r\n                </Card>\r\n                <Card loading={isLoading} title=\"Tasks\" style={{ width: 300 }}>\r\n                    <p>Midterm Examination 2020</p>\r\n                    <p>Project Summary Weekly</p>\r\n                </Card>\r\n                \r\n                \r\n            </Space>\r\n            \r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\nimport { Menu, Dropdown , message } from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport \"./System.css\"\r\nimport {useTranslation} from 'react-i18next';\r\n\r\n\r\n\r\nconst SSystem = () => \r\n{\r\n    const { i18n } = useTranslation();\r\n    const handleChangeLanguage = (lang) => {\r\n    i18n.changeLanguage(lang);\r\n}\r\n\r\n\r\nconst onClick = ({ key }) => {\r\n    //message.info(`Click on item ${key}`);\r\n    handleChangeLanguage(key);\r\n};\r\n\r\nconst menu = (\r\n    <Menu onClick={onClick}>\r\n      <Menu.Item key=\"en\">\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n          English\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"vi\">\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Vietnamese\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"cn\">\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Chinese\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Item>blah</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n\r\n\r\n    return (\r\n        <Dropdown overlay={menu}>\r\n            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n            Language <DownOutlined />\r\n            </a>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nexport default SSystem;","import { useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n\r\n    const httpAbortCtrl = new AbortController();\r\n    activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n    return fetch(url, {\r\n            method,\r\n            body,\r\n            headers,\r\n            signal: httpAbortCtrl.signal\r\n        });    \r\n    },[]);\r\n\r\n\r\n    useEffect(() => {\r\n    return () => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n\r\n    }, []);\r\n\r\n    return { sendRequest };\r\n};\r\n","import  styled from 'styled-components';\r\nimport {palette} from 'styled-theme';\r\n\r\nconst ThemeSwitcherWrapper = styled.div`\r\n    background: ${palette('background', 0)};\r\n    \r\n    p {\r\n      color: ${palette('text', 0)};\r\n    }\r\n`;\r\n\r\nexport default ThemeSwitcherWrapper;","const actions = {\r\n\r\n    CHANGE_THEME: \"CHANGE_THEME\",\r\n\r\n    changeTheme: (theme) => ({\r\n        type: actions.CHANGE_THEME,\r\n        theme: theme,\r\n    }),\r\n}\r\n\r\nexport default actions;","const theme = {}\r\n\r\ntheme.palette = {\r\n    background: [\r\n        '#fff'\r\n    ],\r\n    text: [\r\n        '#000'\r\n    ],\r\n    primary: [\r\n        '#005bff'\r\n    ]\r\n}\r\n\r\ntheme.fonts = {\r\n    primary: 'Roboto, sans-serif',\r\n    pre: 'Consolas, Liberation Mono, Menlo, Courier, monospace',\r\n};\r\n\r\nexport default theme;","const theme = {}\r\n\r\ntheme.palette = {\r\n    background: [\r\n        '#000'\r\n    ],\r\n    text: [\r\n        '#fff'\r\n    ],\r\n    primary: [\r\n        '#001d4e'\r\n    ]\r\n}\r\n\r\ntheme.fonts = {\r\n    primary: 'Roboto, sans-serif',\r\n    pre: 'Consolas, Liberation Mono, Menlo, Courier, monospace',\r\n};\r\n\r\nexport default theme;","import lightTheme from './light';\r\nimport darkTheme from './dark';\r\n\r\nconst themes = {\r\n    light: lightTheme,\r\n    dark: darkTheme\r\n};\r\n\r\nexport const themesConfig = {\r\n    topbar: 'light',\r\n    sidebar: 'light',\r\n    layout: 'light',\r\n    theme: 'light',\r\n};\r\n\r\nexport default themes;\r\n","import  React from 'react';\r\nimport ThemeSwitcherWrapper from \"./style\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport actions from \"../../Redux/ThemeSwitcher/actions\";\r\nimport themes from \"./ThemeStore\";\r\nimport {Switch} from \"antd\";\r\n\r\nexport default function (props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const changeTheme = (checked) => {\r\n        if (checked) {\r\n            dispatch(actions.changeTheme(themes.dark));\r\n        } else {\r\n            dispatch(actions.changeTheme(themes.light));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ThemeSwitcherWrapper>\r\n            <Switch onChange={changeTheme} checkedChildren={\"Dark\"} unCheckedChildren={\"Light\"}/>\r\n        </ThemeSwitcherWrapper>\r\n    )\r\n\r\n}","import React, { useState } from 'react';\r\nimport {Button} from 'antd'\r\nimport './TestLogin.css';\r\nimport { useHttpClient } from '../../../Hooks/http-hook';\r\nimport agent from \"../../../Utilities/agent\";\r\nimport ThemeSwitcher from '../../../Components/ThemeSwitcher';\r\n\r\n\r\nexport default function TestLogin() {\r\n\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    const [pwClass, setPwClass] = useState('');\r\n    const { sendRequest } = useHttpClient();\r\n\r\n    const login = (e) => {\r\n        if(e) e.preventDefault();\r\n        // sendLoginRequest(username, password);\r\n        agent.Auth.login(username, password).then(res => {\r\n            console.log(res);\r\n            localStorage.setItem(\"userData\", res.token);\r\n            window.location.reload();\r\n        })\r\n    }\r\n\r\n    const loginSuccessfully = (userData) =>{\r\n\r\n        userData.then((data)=>{\r\n            localStorage.setItem(\"userData\", data.token);\r\n        });\r\n        \r\n        window.location.reload();\r\n    }\r\n\r\n    const sendLoginRequest = (user, pass) =>{\r\n        sendRequest(\r\n            \"https://api.kunbr0.com/se104/login/index.php\",\r\n            \"POST\",\r\n            JSON.stringify({\r\n                email : user,\r\n                password: pass\r\n            }),\r\n            {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        )\r\n        .then((response) => {\r\n            if(response.ok){\r\n                console.log(\"ss\");\r\n                loginSuccessfully(response.json())\r\n            }else{\r\n                document.getElementById(\"login-notification\").append(\"Authentication Failed !!\");\r\n            }\r\n            //return response.json();\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n\r\n        });\r\n    }\r\n\r\n    \r\n    const onFocus = () => {\r\n        setPwClass(\"password\");\r\n    }\r\n\r\n    const onLostFocus = () => {\r\n        setPwClass(\"\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={`owl`}>\r\n                <div className={`hand ${pwClass}`} ></div>\r\n                <div className={`hand hand-r ${pwClass}`}></div>\r\n                <div className={`arms ${pwClass}`}>\r\n                    <div className={`arm ${pwClass}`}></div>\r\n                    <div className={`arm arm-r ${pwClass}`}></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form\">\r\n                <div className=\"control\" >\r\n                    <label className=\"fa fa-envelope\"></label>\r\n                    <input style={{width : '100%'}} id=\"user\" placeholder=\"Email\" type=\"email\" onChange={(evt) => setUsername(evt.target.value)}></input>\r\n                </div>\r\n                <div className=\"control\">\r\n                    <label className=\"fa fa-lock\"></label>\r\n                    <input\r\n                        style={{width : '100%'}}\r\n                        id=\"pass\"\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        onFocus={() => onFocus()}\r\n                        onBlur={() => onLostFocus()}\r\n                        onChange={(evt) => setPassword(evt.target.value)}>\r\n                    </input>\r\n                </div>\r\n                <div>\r\n                    <Button id=\"login-button\" type=\"primary\" onClick={() => login()}>Login</Button>\r\n                    <p id=\"signup-text\">Not a member? <a href=\"#\">Sign up Here</a></p>\r\n                    <p className=\"login-bottom-text\">\r\n\r\n                        <a href=\"#\">Terms & Conditions</a> and\r\n                        <a href=\"#\"> Privacy Policy</a>\r\n                    </p>\r\n                    <ThemeSwitcher>\r\n\r\n                    </ThemeSwitcher>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst SelectWithTyping = (props) => {\r\n\r\n    function onChange(value) {\r\n        console.log(`selected ${value}`);\r\n        props.callbackSelection(value);\r\n        //setSelectedValue(value);\r\n    }\r\n    \r\n    function onBlur() {\r\n        console.log('blur');\r\n    }\r\n    \r\n    function onFocus() {\r\n        console.log('focus');\r\n    }\r\n    \r\n    function onSearch(val) {\r\n        console.log('search:', val);\r\n    }\r\n\r\n    const renderOptions = () => {\r\n        const classes = props.options;\r\n        if(classes.length){\r\n            return classes.map((e)=>{\r\n                return <Option key={e[props.optionName]} value={e[props.optionName]}>{e[props.optionName]}</Option>\r\n            });\r\n        }\r\n        return null;\r\n    }\r\n\r\n    let optionElms = renderOptions();\r\n\r\n    // const [selectedValue, setSelectedValue] = useState();\r\n    \r\n    // useEffect(()=>{\r\n    //     if(props.value && props.value !== selectedValue){\r\n    //         setSelectedValue(props.value);\r\n    //     } \r\n    // },[props.value]);\r\n\r\n\r\n    \r\n    return(\r\n        <Select\r\n            showSearch\r\n            style={{ width: props.width || \"100%\" }}\r\n            placeholder={props.placeholder}\r\n            optionFilterProp=\"children\"\r\n            onChange={onChange}\r\n            onFocus={onFocus}\r\n            onBlur={onBlur}\r\n            onSearch={onSearch}\r\n            filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n            disabled={props.disabled || false}\r\n            //value={selectedValue}\r\n        >\r\n            {optionElms}\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default SelectWithTyping;","import React, {useState} from 'react';\r\n\r\nimport { Button } from 'antd';\r\nimport { PoweroffOutlined } from '@ant-design/icons';\r\n\r\nconst ButtonWithLoading = (props) => {\r\n\r\n    // const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // const enterLoading = index => {\r\n    //     props.onClick();\r\n    //     setIsLoading(true);\r\n    //     setTimeout(() => {\r\n    //         setIsLoading(false);\r\n    //     }, props.maxTimeLoading || 1000);\r\n    // };\r\n\r\n    return (\r\n        <Button type=\"primary\" loading={props.isLoading || false} onClick={props.onClick}>\r\n            Lookup\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default ButtonWithLoading;","import React, {useState} from 'react';\r\nimport { Input } from 'antd';\r\nimport SelectWithTyping from '../SelectWithTyping/SelectWithTyping';\r\nimport LocationVN from './LocationVN.json';\r\n\r\n\r\nconst LocationPicker = () => {\r\n\r\n    const [areaInSelectedCity, setAreaInSelectedCity] = useState([]);\r\n\r\n    const mapAreasToArray = (areas) => {\r\n        let result = [];\r\n        console.log(areas);\r\n        for (let area of Object.values(areas)) {\r\n            result.push({name : area})\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const onSelectCity = (selectedCity) => {\r\n        for (let city of Object.values(LocationVN)) {\r\n            if(city.name === selectedCity) {\r\n                setAreaInSelectedCity(mapAreasToArray(city.cities));\r\n                return true;\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    let cityOptions = [];\r\n    for (let city of Object.values(LocationVN)) {\r\n        cityOptions.push(city);\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <div>\r\n        <Input placeholder=\"Details address\" style={{width : \"40%\"}}/>\r\n        \r\n        <SelectWithTyping \r\n            options={areaInSelectedCity} \r\n            optionName=\"name\" \r\n            optionKey=\"name\" \r\n            placeholder=\"District\"\r\n            callbackSelection={()=>{}}\r\n            width=\"30%\"\r\n            disabled={(areaInSelectedCity.length===0)}\r\n        />\r\n        <SelectWithTyping \r\n            options={cityOptions} \r\n            optionName=\"name\" \r\n            optionKey=\"name\" \r\n            placeholder=\"City\"\r\n            callbackSelection={onSelectCity}\r\n            width=\"30%\"\r\n            \r\n        />\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default LocationPicker;","import React from 'react';\r\n\r\nimport { Input, Form } from 'antd';\r\n\r\nconst InputEmail = () => {\r\n    const validateMessages = {\r\n        required: '${label} is required!',\r\n        types: {\r\n          email: '${label} is not validate email!',\r\n          number: '${label} is not a validate number!',\r\n        },\r\n        number: {\r\n          range: '${label} must be between ${min} and ${max}',\r\n        },\r\n    };\r\n    \r\n    return(\r\n        <Form.Item name={['Email']}  rules={[{ type: 'email' }]} style={{marginBottom: \"0px\"}}>\r\n            <Input placeholder=\"Enter email address\"/>\r\n        </Form.Item>\r\n    )\r\n}\r\n\r\nexport default InputEmail;","import React, {useState} from 'react';\r\nimport { Drawer, Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport SelectWithTyping from '../../Components/SelectWithTyping/SelectWithTyping';\r\nimport LocationPicker from '../LocationPicker/LocationPicker';\r\nimport InputEmail from '../Input-Email/InputEmail';\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddNewStudent = (props) => {\r\n\r\n\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const showDrawer = () => {\r\n        setVisible(true);\r\n    };\r\n\r\n    const onClose = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    const renderOptions = () => {\r\n        const classes = props.classData;\r\n        if(classes.length){\r\n            return classes.map((e)=>{\r\n                return <Option key={e[props.optionName]} value={e[props.optionName]}>{e[props.optionName]}</Option>\r\n            });\r\n        }\r\n        return null;\r\n    }\r\n\r\n    let optionClassElms = renderOptions();\r\n\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" onClick={showDrawer} style={props.style} disabled={props.disabled} >\r\n          <PlusOutlined /> New student\r\n        </Button>\r\n        <Drawer\r\n          title=\"Create a new student\"\r\n          width={720}\r\n          onClose={onClose}\r\n          visible={visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n          footer={\r\n            <div\r\n              style={{\r\n                textAlign: 'right',\r\n              }}\r\n            >\r\n              <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={onClose} type=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          }\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark>\r\n            <Row gutter={16}>\r\n                <Col span={10}>\r\n                <Form.Item\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    rules={[{ required: true, message: 'Please enter user name' }]}\r\n                >\r\n                    <Input placeholder=\"Enter student's name\" />\r\n                </Form.Item>\r\n                </Col>\r\n                <Col span={6}>\r\n                <Form.Item\r\n                    name=\"gender\"\r\n                    label=\"Gender\"\r\n                    rules={[{ required: true, message: 'Please select an owner' }]}\r\n                    >\r\n                    <Select placeholder=\"Select gender\" style={{width: \"100%\"}}>\r\n                        <Option value=\"male\">Male</Option>\r\n                        <Option value=\"female\">Female</Option>\r\n                        <Option value=\"undefied\">Undefied</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item\r\n                    name=\"dob\"\r\n                    label=\"Date of Birth\"\r\n                    rules={[{ required: true, message: 'Select birthday' }]}\r\n                    >\r\n                    <DatePicker\r\n                        style={{ width: '100%' }}\r\n                        getPopupContainer={trigger => trigger.parentNode}\r\n                        placeholder = \"Select birthday\"\r\n                    />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n                <Col span={12}>\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        rules={[{ required: true, message: 'Please choose the approver' }]}\r\n                        >\r\n                        <InputEmail />\r\n                        \r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Form.Item\r\n                    name=\"class\"\r\n                    label=\"Class\"\r\n                    rules={[{ required: true, message: 'Email address' }]}\r\n                    >\r\n                        <SelectWithTyping \r\n                            options={props.classData} \r\n                            optionName=\"className\" \r\n                            optionKey=\"classID\" \r\n                            placeholder=\"Please choose the class\"\r\n                            callbackSelection={()=>{}}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n                <Col span={24}>\r\n                    <Form.Item\r\n                    name=\"address\"\r\n                    label=\"Address\"\r\n                    rules={[{ required: true, message: 'Please choose the dateTime' }]}\r\n                    >\r\n                    \r\n                    <LocationPicker />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the description',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.TextArea rows={4} placeholder=\"Please enter the description\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\r\n}\r\n\r\nexport default AddNewStudent;","import React, {useState, useEffect} from 'react';\r\nimport { Modal, Button, Space, Descriptions, Badge, Progress, Row, Col } from 'antd';\r\n\r\nconst Statistic = (props) => {\r\n\r\n    const [statisticData, setStatisticData] = useState({});\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(props !== statisticData){ \r\n            setStatisticData(props);\r\n        }\r\n    },[props]);\r\n\r\n    const onOpenModal = (value) => {\r\n        setModalVisible(value);\r\n    }\r\n\r\n    const styleOfProgress = (colorCode) => {\r\n        console.log(colorCode);\r\n        return {\r\n            '0%': colorCode,\r\n            '100%': colorCode\r\n        }\r\n    }\r\n        \r\n\r\n    return (\r\n        <Space>\r\n            <Button type=\"primary\" onClick={() => onOpenModal(true)} disabled={props.disabled}>\r\n            Statistics\r\n            </Button>\r\n            <Modal\r\n            title=\"Statistic data\"\r\n            centered\r\n            visible={modalVisible}\r\n            onOk={() => setModalVisible(false)}\r\n            onCancel={() => setModalVisible(false)}\r\n            >\r\n            \r\n            <Descriptions layout=\"vertical\" bordered>\r\n                <Descriptions.Item label=\"Class\">{statisticData.pClassName}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Subject\">{statisticData.pSubject}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Semester\">HK2 - 2020</Descriptions.Item>\r\n                <Descriptions.Item label=\"Lecture\" span={1}>\r\n                    Mr. Nguyen Cong Hoan\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Status\" span={2}>\r\n                <Badge status=\"success\" text=\"Running\" />\r\n                </Descriptions.Item>\r\n                \r\n                <Descriptions.Item label=\"Statistic details\">\r\n                    \r\n                    <Row gutter={16}>\r\n                        <Col span={5}>Excellence</Col>\r\n                        <Col span={19}>\r\n                            <Progress percent={40} status=\"active\" strokeColor={{'0%': '#1890ff', '100%': '#1890ff'}}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                        <Col span={5}>Good</Col>\r\n                        <Col span={19}>\r\n                            <Progress percent={23} status=\"active\" strokeColor={{'0%': '#52c41a', '100%': '#52c41a'}}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                        <Col span={5}>Medium</Col>\r\n                        <Col span={19}>\r\n                            <Progress percent={57} status=\"active\" strokeColor={{'0%': '#ff4d4f', '100%': '#ff4d4f'}}/>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                    \r\n                    \r\n                    \r\n                    \r\n                </Descriptions.Item>\r\n                </Descriptions>\r\n\r\n            </Modal>\r\n        </Space>\r\n    )\r\n}\r\n\r\nexport default Statistic;","import React from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nconst TextTranslation = ({textName, kClass}) => {\r\n    const {t} = useTranslation(); \r\n    return(      \r\n        <span className={kClass}>{t(textName)}</span>\r\n    );\r\n    \r\n}\r\n\r\nexport default TextTranslation;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Table, InputNumber } from 'antd';\r\nimport TextTranslation from '../TextTranslation/TextTranslation';\r\nimport ScoreCoefficient from '../../Containers/ClassDetails/SubjectCoefficient.json';\r\nimport './StudentScoresTable.css';\r\nimport { useSSR } from 'react-i18next';\r\nconst columns = [\r\n  {\r\n    title: \r\n        <div>\r\n            <TextTranslation textName=\"ClassInfo-Table-No.1\" kClass=\"pcview\"/>\r\n            <TextTranslation textName=\"ClassInfo-Table-No.2\" kClass=\"mbview\"/>\r\n        </div>,\r\n    dataIndex: 'studentID',\r\n    key: 'studentID',\r\n    width: 8,\r\n    fixed: 'left',\r\n    filters: [\r\n      {\r\n        text: 'Joe',\r\n        value: 'Joe',\r\n      },\r\n      {\r\n        text: 'John',\r\n        value: 'John',\r\n      },\r\n    ],\r\n        onFilter: (value, record) => record.name.indexOf(value) === 0,\r\n    },\r\n  \r\n    {\r\n        title: \r\n            <div>\r\n                <TextTranslation textName=\"ClassInfo-Table-Name.1\" kClass=\"pcview\"/>\r\n                <TextTranslation textName=\"ClassInfo-Table-Name.2\" kClass=\"mbview\"/>\r\n            </div>,\r\n        dataIndex: 'studentName',\r\n        key: 'studentName',\r\n        width: 35,\r\n        sorter: (a, b) => a.studentID - b.studentID,\r\n    },\r\n    {\r\n    title: \r\n        <div>\r\n            <TextTranslation textName=\"ClassInfo-Table-15mins.1\" kClass=\"pcview\"/>\r\n            <TextTranslation textName=\"ClassInfo-Table-15mins.2\" kClass=\"mbview\"/>\r\n        </div>,\r\n    dataIndex: 'k15mins',\r\n    key: 'k15mins',\r\n    width: 12,\r\n    },\r\n    {\r\n    title: \r\n        <div>\r\n            <TextTranslation textName=\"ClassInfo-Table-45mins.1\" kClass=\"pcview\"/>\r\n            <TextTranslation textName=\"ClassInfo-Table-45mins.2\" kClass=\"mbview\"/>\r\n        </div>,\r\n    dataIndex: 'k45mins',\r\n    key: 'k45mins',\r\n    width: 12,\r\n    },\r\n    {\r\n    title: \r\n        <div>\r\n            <TextTranslation textName=\"ClassInfo-Table-midterm.1\" kClass=\"pcview\"/>\r\n            <TextTranslation textName=\"ClassInfo-Table-midterm.2\" kClass=\"mbview\"/>\r\n        </div>,\r\n    dataIndex: 'kmidterm',\r\n    key: 'kmidterm',\r\n    width: 12,\r\n    },\r\n    {\r\n        title: \r\n            <div>\r\n                <TextTranslation textName=\"ClassInfo-Table-endterm.1\" kClass=\"pcview\"/>\r\n                <TextTranslation textName=\"ClassInfo-Table-endterm.2\" kClass=\"mbview\"/>\r\n            </div>,\r\n        dataIndex: 'kendterm',\r\n        key: 'kendterm',\r\n        width: 12,\r\n    }, \r\n    {\r\n        title: \r\n            <div>\r\n                <TextTranslation textName=\"ClassInfo-Table-final.1\" kClass=\"pcview\"/>\r\n                <TextTranslation textName=\"ClassInfo-Table-final.2\" kClass=\"mbview\"/>\r\n            </div>,\r\n        dataIndex: 'final',\r\n        key: 'final',\r\n        width: 12,\r\n    },     \r\n    \r\n];\r\n\r\n\r\n// for (let i = 0; i < 100; i++) {\r\n//   data.push({\r\n//     key: i,\r\n//     no: i,\r\n//     name: 'Nguyen Thi Quynh Ngan',\r\n//     age: i + 1,\r\n//     s15mins: '8.50',\r\n//     s45mins: '7.75',\r\n//     smidterm: '8.25',\r\n//     sendterm: '6.50',\r\n//     final: '7.74',\r\n//     action: 'Edit',\r\n//   });\r\n// }\r\n\r\n\r\nconst calculateFinalScore = (e) => {\r\n    \r\n    let coef = ScoreCoefficient;\r\n    return e.k15mins*coef.k15mins + e.k45mins*coef.k45mins \r\n        + e.kmidterm*coef.kmidterm + e.kmidterm*coef.kmidterm;\r\n}\r\n\r\nconst StudentScoresTable = (props) => {\r\n    \r\n    const [classDetailsData, setClassDetailsData] = useState([{}]);\r\n    const [tableData, setTableData] = useState([]);\r\n    const [tableEditable, setTableEditable] = useState(false);\r\n    \r\n    useEffect(()=>{\r\n        if(props.tableEditable !== tableEditable){\r\n            setTableEditable(props.tableEditable);\r\n        }\r\n    });\r\n\r\n    const renderClassDetailsData = () => {\r\n        setTableData([]);\r\n        let data = []; // clear data\r\n        let i=0;\r\n\r\n        console.log(classDetailsData);\r\n\r\n        if(classDetailsData){\r\n            for(let e of classDetailsData){\r\n                \r\n                //e[\"key\"] = i;\r\n                e[\"final\"] = calculateFinalScore(e);\r\n                /*e[\"final\"] = (\r\n                <Input\r\n                    disabled={true}\r\n                    value={calculateFinalScore(e)}\r\n                    placeholder=\"Input a number\"\r\n                    maxLength={25}\r\n                />);*/\r\n\r\n                let a = {};\r\n                Object.keys(e).forEach((key)=>{ \r\n                    a[key] = (key === 'k15mins' || key === 'k45mins' || key === 'kmidterm' || key === 'kendterm' || key === 'final' ) ? \r\n                    <InputNumber\r\n                            style={{width: \"100%\"}}\r\n                            min={1} max={10}\r\n                            disabled={!tableEditable}\r\n                            defaultValue={e[key]}\r\n                             \r\n                        /> : e[key]\r\n                    a[\"key\"] = i;\r\n                });\r\n                data.push(a);\r\n                i++;\r\n            }\r\n        }\r\n        setTableData(data);\r\n        \r\n    }\r\n\r\n    \r\n\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(props.classDetailsData !== classDetailsData) setClassDetailsData(props.classDetailsData || []);\r\n       \r\n    },[props.classDetailsData]);\r\n\r\n    useEffect(()=>{\r\n        renderClassDetailsData();\r\n    },[classDetailsData, tableEditable]);\r\n\r\n    \r\n    return (\r\n        <Table loading={props.isLoading || false}\r\n            columns={columns}\r\n            dataSource={tableData}\r\n            bordered\r\n            size=\"middle\"\r\n            scroll={{ x: 'calc(500px + 50%)', y: 240 }}\r\n            expandable={true}\r\n        />\r\n    )\r\n}\r\n\r\nexport default StudentScoresTable;","import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport SelectWithTyping from '../../Components/SelectWithTyping/SelectWithTyping';\r\nimport SubmitWithLoading from '../../Components/ButtonWithLoading/ButtonWithLoading';\r\nimport AddNewStudent from '../../Components/AddNewStudent/AddNewStudent';\r\nimport StatisticScore from '../../Components/Statistic/Statistic';\r\n\r\n\r\nimport { Card, Col, Row, message, Space, Collapse, Button } from 'antd';\r\nimport { CaretRightOutlined } from '@ant-design/icons';\r\n\r\nimport Subjectslist from './SubjectsList.json';\r\nimport StudentScoreTable from '../../Components/StudentScoresTable/StudentScoresTable';\r\n\r\nimport { useHttpClient } from '../../Hooks/http-hook';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst ClassDetails = (props) => {\r\n    console.log(props.match.params.classCode);\r\n\r\n    console.log(props);\r\n\r\n    const [selectedClass, setSelectedClass] = useState();\r\n    \r\n    const [selectedSubject, setSelectedSubject] = useState();\r\n\r\n    const { sendRequest } = useHttpClient();\r\n\r\n    const { Panel } = Collapse;\r\n\r\n    // Fetch data\r\n    const [selectedClassDetailsData, setSelectedClassDetailsData] = useState();\r\n    const [isFetchingClassDetailsData, setIsFetchingClassDetailsData] = useState(false);\r\n\r\n    const [tableEditable, setTableEditable] = useState(false);\r\n\r\n    // Redirect \r\n    const rHistory = useHistory();\r\n\r\n    const onSelectClass = (kClass) => {\r\n        console.log(\"kClass\" + kClass);\r\n        setSelectedClass(kClass);\r\n        //rHistory.push(`/class/${selectedClass}`);\r\n    }\r\n\r\n\r\n    console.log(selectedClass);\r\n    console.log(selectedSubject);\r\n\r\n    const sleeper = (ms) => {\r\n        return function(x) {\r\n          return new Promise(resolve => setTimeout(() => resolve(x), ms));\r\n        };\r\n    }\r\n\r\n    \r\n    useEffect(()=>{\r\n\r\n    },[]);\r\n\r\n    const fetchClassDetailsData = () => {\r\n        setIsFetchingClassDetailsData(true);\r\n\r\n        sendRequest(`https://api.kunbr0.com/se104/subjects/${selectedClass}/${selectedSubject}.php`)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n\r\n            .then(sleeper(500))\r\n\r\n            .then((students) => {\r\n                setSelectedClassDetailsData(students);\r\n                setIsFetchingClassDetailsData(false);\r\n                message.success(`${selectedSubject} data of ${selectedClass} loaded successfully !`);\r\n            })\r\n            \r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error(`Cannot get ${selectedSubject} data of ${selectedClass} !`);\r\n                setSelectedClassDetailsData([])\r\n                setIsFetchingClassDetailsData(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"site-card-wrapper\">\r\n            <Collapse\r\n                bordered={false}\r\n                defaultActiveKey={['1']}\r\n                expandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n                className=\"site-collapse-custom-collapse\"\r\n                style={{marginBottom : \"10px\"}}\r\n            >\r\n                <Panel header=\"Class data selection\" key=\"1\" className=\"site-collapse-custom-panel\">\r\n                <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Card loading={props.classData.classData.length > 0 ? false : true} size={300} title=\"Classes\" bordered={false}>\r\n                        <SelectWithTyping \r\n                            value={props.match.params.classCode} \r\n                            callbackSelection={setSelectedClass} \r\n                            options={props.classData.classData} \r\n                            optionName=\"className\" optionKey=\"classID\" \r\n                            placeholder=\"Select class\"\r\n                            disabled={isFetchingClassDetailsData}/>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card loading={props.classData.classData.length > 0 ? false : true} title=\"Subjects\" bordered={false}>\r\n                        <SelectWithTyping \r\n                            callbackSelection={setSelectedSubject} \r\n                            options={Subjectslist} \r\n                            optionName=\"subjectName\" optionKey=\"sid\" \r\n                            placeholder=\"Select subject\"\r\n                            disabled={isFetchingClassDetailsData}/>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card loading={isFetchingClassDetailsData} title=\"Classinfo\" bordered={false}>\r\n                        <Space direction=\"vertical\">\r\n                            <Space>Lecture : Le Thi Van a</Space>\r\n                            <Space>Enrolled Student  : 46</Space>\r\n                            \r\n                        </Space>\r\n                    </Card>\r\n                </Col>\r\n                </Row>\r\n                <SubmitWithLoading isLoading={isFetchingClassDetailsData} onClick={fetchClassDetailsData} maxTimeLoading={1000} />\r\n                <AddNewStudent disabled={isFetchingClassDetailsData} classData={props.classData.classData} style={{marginLeft : \"5px\", marginRight : \"5px\", backgroundColor : \"#52c41a\", borderColor: \"#52c41a\"}} />\r\n                <StatisticScore \r\n                    pClassName={selectedClass} \r\n                    pSubject={selectedSubject}\r\n                    disabled={!selectedClassDetailsData}\r\n                    />\r\n                <Button type=\"primary\" danger={tableEditable} onClick={()=>setTableEditable(!tableEditable)}>\r\n                    {!tableEditable ? \"Edit\":\"Save\"} \r\n                </Button>\r\n                </Panel>\r\n            </Collapse>\r\n            <StudentScoreTable tableEditable={tableEditable} classDetailsData={selectedClassDetailsData} isLoading={isFetchingClassDetailsData} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        classData : state.classData\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(ClassDetails);\r\n","import React , {useState, useEffect} from 'react';\r\nimport { Calendar, Alert, Badge, Card } from 'antd';\r\nimport moment from 'moment';\r\nimport 'antd/dist/antd.css';\r\nimport './BigCalendar.css';\r\n\r\nconst BigCalendar = ({width = 95}) => {\r\n\r\n    // First loading\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            setIsLoading(false);\r\n        }, 1000);\r\n    });\r\n\r\n    const [value, setValue] = useState();\r\n    const [selectedValue, setSelectedValue] = useState(moment);\r\n  \r\n    const onSelect = value => {\r\n        setValue(value);\r\n        setSelectedValue(value);\r\n      \r\n    };\r\n  \r\n    const onPanelChange = value => \r\n    {\r\n        setValue(value);\r\n    };\r\n  \r\n    \r\n  \r\n    //const { value, selectedValue } = this.state;\r\n    return (\r\n        <div id=\"big-calendar-wrapper\" style={{width : `${width}%`, margin: 25}}>\r\n        <Alert\r\n        message={`You selected date: ${selectedValue && selectedValue.format('YYYY-MM-DD')}`}\r\n        />\r\n        <Card loading={isLoading}>\r\n            <Calendar fullscreen={true} style={{padding: 25}} dateCellRender={dateCellRender} monthCellRender={monthCellRender} value={value} onSelect={onSelect} onPanelChange={onPanelChange} />\r\n        </Card>\r\n            \r\n        </div>\r\n    );\r\n  }\r\n  \r\n  function getListData(value) {\r\n    let listData;\r\n    switch (value.date()) {\r\n      case 8:\r\n        listData = [\r\n          { type: 'warning', content: 'Đồ án quan trọng.' },\r\n          { type: 'success', content: 'Đi chơi.' },\r\n        ];\r\n        break;\r\n      case 10:\r\n        listData = [\r\n          { type: 'warning', content: 'Đồ án quan trọng.' },\r\n          { type: 'success', content: 'Đi chơi.' },\r\n          { type: 'error', content: 'This is error event.' },\r\n        ];\r\n        break;\r\n      case 15:\r\n        listData = [\r\n          { type: 'warning', content: 'Đồ án quan trọng' },\r\n          { type: 'success', content: 'This is very long usual event。。....' },\r\n          { type: 'error', content: 'This is error event 1.' },\r\n          { type: 'error', content: 'This is error event 2.' },\r\n          { type: 'error', content: 'This is error event 3.' },\r\n          { type: 'error', content: 'This is error event 4.' },\r\n        ];\r\n        break;\r\n      default:\r\n    }\r\n    return listData || [];\r\n  }\r\n  \r\n  function dateCellRender(value) {\r\n    const listData = getListData(value);\r\n    return (\r\n      <ul className=\"events\">\r\n        {listData.map(item => (\r\n          <li key={item.content}>\r\n            <Badge status={item.type} text={item.content} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  \r\n  function getMonthData(value) {\r\n    if (value.month() === 8) {\r\n      return 1394;\r\n    }\r\n  }\r\n  \r\n  function monthCellRender(value) {\r\n    const num = getMonthData(value);\r\n    return num ? (\r\n      <div className=\"notes-month\">\r\n        <section>{num}</section>\r\n        <span>Even tháng</span>\r\n      </div>\r\n    ) : null;\r\n  }\r\n\r\n\r\n  export default BigCalendar;","import React from 'react';\r\nimport Calendar from '../../Components/BigCalendar/BigCalendar';\r\n\r\nconst Schedule = () => {\r\n    return <Calendar />\r\n};\r\n\r\nexport default Schedule;","import React from 'react';\r\nimport { Descriptions } from 'antd';\r\n\r\nconst Profile = () => {\r\n    return(\r\n        <Descriptions title=\"User Info\" layout=\"vertical\">\r\n            <Descriptions.Item label=\"UserName\">kunbr0</Descriptions.Item>\r\n            <Descriptions.Item label=\"Telephone\">1800 1234</Descriptions.Item>\r\n            <Descriptions.Item label=\"Live\">Phu Yen, VietNam</Descriptions.Item>\r\n            <Descriptions.Item label=\"Address\" span={1}>\r\n            No. 18, LVC, Hangzhou, Zhejiang, China\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Remark\">Nong Dan</Descriptions.Item>\r\n        </Descriptions>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {lazy} from 'react';\r\n//import SLogin from './../Sites/Login/Login';\r\nimport SHomepage from '../Containers/Pages/Homepage/Homepage';\r\n// import SNotFound from './../Sites/NotFound_404/NotFound_404';\r\n//import ClassInfo from './../Sites/Class/ClassInfo';\r\n// import History from './../Sites/History/History';\r\nimport SSystem from '../Containers/System/System';\r\n//import Login from '../Sites/Login/Login';\r\nimport TestLogin from '../Containers/Pages/TestLogin/TestLogin'\r\nimport ClassDetails from '../Containers/ClassDetails/ClassDetails';\r\nimport Schedule from '../Containers/Schedule/Schedule';\r\nimport Profile from '../Containers/Profile/Profile';\r\n\r\n\r\nconst routes = [\r\n    {\r\n        path : '/',\r\n        exact : true,\r\n        main : () => <SHomepage />\r\n    },\r\n    {\r\n        path : '/system',\r\n        exact : false,\r\n        main : () => <SSystem />\r\n    },\r\n    {\r\n        path : '/users',\r\n        exact : false,\r\n        main : () => <TestLogin />\r\n    },\r\n    {\r\n        path : '/class/:classCode',\r\n        exact : false,\r\n        main : ({match}) => <ClassDetails match={match} />\r\n    },\r\n    {\r\n        path : '/schedule',\r\n        exact : false,\r\n        main : () => <Schedule />\r\n    },\r\n    {\r\n        path : '/profile',\r\n        exact : false,\r\n        main : () => <Profile />\r\n    },\r\n];\r\n\r\nexport default routes;","import styled from \"styled-components\";\r\nimport bgImage from \"../../../Assets/img/bg.png\"\r\n\r\nconst SetupPageWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 10vh;\r\n  height: 100vh;\r\n  background-image: url(\"${bgImage}\");\r\n  background-size: cover;\r\n  \r\n  .setup-container {\r\n      width: 850px;\r\n      height: 460px;   \r\n      display: flex;   \r\n      border-radius: 16px;\r\n      box-shadow: 2px 2px 10px #3d457a;\r\n      background: none;\r\n      \r\n      .left-side {\r\n        background: #677EBE;\r\n        min-width: 230px;\r\n        border-radius: 16px 0 0 16px;\r\n        padding: 0px 15px;\r\n        display: flex;\r\n        flex-flow: column;\r\n        position: relative;\r\n        \r\n        .header {\r\n          height: 75px;\r\n          min-height: 75px;\r\n        }\r\n        \r\n        .content {\r\n          height: 100%;\r\n          color: white;\r\n          z-index: 10;\r\n          display: flex;\r\n          justify-content: center;\r\n          padding-left: 10px;\r\n          \r\n          .ant-steps-item-description {\r\n            color: rgba(255, 255, 255, 0.65);\r\n          }\r\n          \r\n          .ant-steps-item-title {          \r\n            color: rgba(255, 255, 255, 0.85);\r\n          }\r\n          \r\n          .ant-steps-item-process {\r\n            .ant-steps-item-description {\r\n              color: rgba(255, 255, 255, 0.85);            \r\n            }\r\n            \r\n            .ant-steps-item-title {\r\n              color: rgba(255, 255, 255, 1);            \r\n            }\r\n            \r\n            .ant-steps-item-icon {\r\n              background: #5BDEC6;\r\n              border-color: #5BDEC6;            \r\n            }\r\n          }\r\n          \r\n          .ant-steps-item-finish {\r\n            .ant-steps-item-icon {\r\n              border-color: #5BDEC6;          \r\n            }\r\n            \r\n            .ant-steps-icon {\r\n              color: #5abfa7;\r\n            }\r\n            \r\n            .ant-steps-item-tail {\r\n              &::after {\r\n                background: #5BDEC6;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        \r\n        .footer {\r\n          display: flex;\r\n          justify-content: center;\r\n          color: #cadbde;\r\n        }   \r\n          \r\n        .particle {\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          bottom: 0;\r\n          right: 0;\r\n          \r\n          canvas {\r\n            border-radius: 16px 0 0 16px;\r\n          }\r\n        }\r\n      }\r\n      \r\n      .right-side {\r\n        display: flex;\r\n        flex-flow: column;\r\n        width: 100%;\r\n        height: 100%;\r\n        padding: 5px 5px 5px 10px;\r\n        background: #fff;\r\n        border-radius: 0 16px 16px 0;\r\n        \r\n        .title {\r\n          margin-bottom: 0;\r\n          width: 100%;\r\n          border-bottom: 1px solid #bababa;\r\n          color: #677FBD;\r\n        }\r\n      }\r\n  }\r\n`;\r\n\r\nexport default SetupPageWrapper;\r\n\r\nexport const StepWrapper = styled.div`  \r\n  width: 100%;\r\n  height: 100%;\r\n  padding-top: 5px;\r\n  overflow: hidden auto;\r\n`;","import styled from \"styled-components\";\r\n\r\nconst DatabaseWrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-flow: column;\r\n  padding-right: 5px;\r\n  padding-bottom: 5px;\r\n  \r\n  .page-container {  \r\n    height: 100%;\r\n    display: flex;\r\n    flex-flow: column;\r\n    overflow: hidden auto;\r\n    \r\n    .st-form {\r\n      display: flex;\r\n      flex-flow: column;\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      height: 100%;\r\n      margin-top: 5px;\r\n      \r\n      .db-selector {\r\n        width: 170px;\r\n      }\r\n      \r\n      th {\r\n        padding: 3px 0px 3px 15px;\r\n        text-align: left;\r\n      }\r\n      \r\n      .st-label {\r\n        min-width: 120px;\r\n        font-weight: 500;\r\n      }\r\n      \r\n      .st-input {\r\n        max-width: 200px;\r\n      }\r\n       \r\n      .st-description {\r\n        font-weight: normal;\r\n        font-size: 12px;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .st-controller {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    padding-right: 20px;\r\n  }\r\n`;\r\n\r\nexport default DatabaseWrapper;","import React, {useState} from \"react\";\r\nimport DatabaseWrapper from \"./style\";\r\nimport {Button, Select} from \"antd\";\r\nimport MsSQL from './Form/mssql'\r\nimport MySQL from './Form/mysql'\r\nimport Sqlite from './Form/sqlite'\r\n\r\nconst {Option} = Select;\r\nconst sqls = {\r\n    MYSQL: MySQL,\r\n    MSSQL: MsSQL,\r\n    SQLITE: Sqlite\r\n}\r\n\r\nexport default function (props) {\r\n    const [sql, setSQL] = useState(\"MYSQL\");\r\n    const [error, setError] = useState(0);\r\n    const [data, setData] = useState();\r\n\r\n    const SqlForm = sqls[sql];\r\n\r\n    const onSubmit = () => {\r\n        if (!data || !data.db_name || !data.password || (data.db_server !== 'SQLITE' && !data.username)) {\r\n            setError(1);\r\n            return;\r\n        }\r\n\r\n        props.onNext(props.step + 1);\r\n    }\r\n\r\n    return (\r\n        <DatabaseWrapper>\r\n            <div className=\"page-container\">\r\n                <label>\r\n                    Below you should enter your connection details. If you're not sure about these, contact your system admin.\r\n                </label>\r\n                <div className=\"st-form\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>\r\n                                    <label>Database server</label>\r\n                                </th>\r\n                                <th className=\"st-input\">\r\n                                    <Select className=\"db-selector\" defaultValue=\"MYSQL\" onChange={(value) => setSQL(value)}>\r\n                                        <Option value=\"MYSQL\">MySQL</Option>\r\n                                        <Option value=\"MSSQL\">SQL Server</Option>\r\n                                        <Option value=\"SQLITE\">Sqlite</Option>\r\n                                    </Select>\r\n                                </th>\r\n                                <th>\r\n                                </th>\r\n                            </tr>\r\n                            <SqlForm onChange={(value) => setData(value)}/>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"st-controller\">\r\n                        <Button onClick={onSubmit}>Submit</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </DatabaseWrapper>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Input, InputNumber} from \"antd\";\r\n\r\nexport default function (props) {\r\n    const [db, setDB] = useState();\r\n    const [user, setUser] = useState();\r\n    const [pass, setPass] = useState();\r\n    const [host, setHost] = useState(\"localhost\");\r\n    const [port, setPort] = useState(3306);\r\n    const [prefix, setPrefix] = useState(\"qlhs_\");\r\n\r\n    useEffect(() => {\r\n        if (props.onChange) {\r\n            props.onChange({\r\n                db_server: \"MYSQL\",\r\n                db_name: db,\r\n                username: user,\r\n                password: pass,\r\n                hostname: host,\r\n                port: port,\r\n                tb_prefix: prefix\r\n            });\r\n        }\r\n    }, [db, user, pass, host, port, prefix])\r\n\r\n    return (\r\n        <>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Database\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <Input onChange={(evt) => setDB(evt.target.value)} value={db}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    The name of the database you want to use with QLHS.\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Username\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <Input onChange={(evt) => setUser(evt.target.value)} value={user}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    Your database username.\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Password\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <Input.Password onChange={(evt) => setPass(evt.target.value)} value={pass}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    Your database password.\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Hostname\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <Input onChange={(evt) => setHost(evt.target.value)} value={host}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    You should be able to get this info from your system administrator, if localhost doesn't work.\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Port\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <InputNumber onChange={(value) => setPort(value)} defaultValue={port}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    If you want to use custom port for your MySQL server, change this.\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Table prefix\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <Input onChange={(evt) => setPrefix(evt.target.value)} value={prefix}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    If you want to run multiple QLHS installation in a single database, change this.\r\n                </th>\r\n            </tr>\r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Input, InputNumber} from \"antd\";\r\n\r\nexport default function (props) {\r\n    const [db, setDB] = useState();\r\n    const [user, setUser] = useState();\r\n    const [pass, setPass] = useState();\r\n    const [host, setHost] = useState(\"localhost\");\r\n    const [port, setPort] = useState(1433);\r\n    const [prefix, setPrefix] = useState(\"qlhs_\");\r\n\r\n    useEffect(() => {\r\n        if (props.onChange) {\r\n            props.onChange({\r\n                db_server: \"MSSQL\",\r\n                db_name: db,\r\n                username: user,\r\n                password: pass,\r\n                hostname: host,\r\n                port: port,\r\n                tb_prefix: prefix\r\n            });\r\n        }\r\n    }, [db, user, pass, host, port, prefix])\r\n\r\n    return (\r\n        <>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Database\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <Input onChange={(evt) => setDB(evt.target.value)} value={db}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    The name of the database you want to use with QLHS.\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Username\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <Input onChange={(evt) => setUser(evt.target.value)} value={user}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    Your database username.\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Password\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <Input.Password onChange={(evt) => setPass(evt.target.value)} value={pass}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    Your database password.\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Hostname\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <Input onChange={(evt) => setHost(evt.target.value)} value={host}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    You should be able to get this info from your system administrator, if localhost doesn't work.\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Port\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <InputNumber onChange={(value) => setPort(value)} defaultValue={port}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    If you want to use custom port for your SQL Server, change this.\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Table prefix\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <Input onChange={(evt) => setPrefix(evt.target.value)} value={prefix}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    If you want to run multiple QLHS installation in a single database, change this.\r\n                </th>\r\n            </tr>\r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Input} from \"antd\";\r\n\r\nexport default function (props) {\r\n    const [db, setDB] = useState();\r\n    const [pass, setPass] = useState();\r\n    const [prefix, setPrefix] = useState(\"qlhs_\");\r\n\r\n    useEffect(() => {\r\n        if (props.onChange) {\r\n            props.onChange({\r\n                db_server: \"SQLITE\",\r\n                db_name: db,\r\n                password: pass,\r\n                tb_prefix: prefix\r\n            });\r\n        }\r\n    }, [db, pass, prefix])\r\n\r\n    return (\r\n        <>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Database\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <Input onChange={(evt) => setDB(evt.target.value)} value={db}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    The name of the database you want to use with QLHS.\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Password\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <Input.Password onChange={(evt) => setPass(evt.target.value)} value={pass}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    Your database password.\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th className=\"st-label\">\r\n                    Table prefix\r\n                </th>\r\n                <th className=\"st-input\">\r\n                    <Input onChange={(evt) => setPrefix(evt.target.value)} value={prefix}/>\r\n                </th>\r\n                <th className=\"st-description\">\r\n                    If you want to run multiple QLHS installation in a single database, change this.\r\n                </th>\r\n            </tr>\r\n        </>\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nconst InformationWrapper = styled.div`\r\n  \r\n  .st-input-info {\r\n    width: 250px;\r\n  }\r\n  \r\n  .st-form {\r\n    margin-top: 20px !important;\r\n  }\r\n`;\r\n\r\nexport default InformationWrapper;","import styled from \"styled-components\";\r\n\r\nconst FinishWrapper = styled.div`\r\n  \r\n  .st-input-info {\r\n    width: 250px;\r\n  }\r\n  \r\n  .st-form {\r\n    margin-top: 20px !important;\r\n  }\r\n  \r\n  .st-controller-finish {\r\n    margin-top: 30px;\r\n    padding: 0px 15px;\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport default FinishWrapper;","import styled from \"styled-components\";\r\n\r\nconst SystemWrapper = styled.div`\r\n  \r\n  .st-input-info {\r\n    width: 250px;\r\n  }\r\n  \r\n  .st-form {\r\n    margin-top: 20px !important;\r\n  }\r\n`;\r\n\r\nexport default SystemWrapper;","import styled from 'styled-components'\r\n\r\nconst LoaderWrapper = styled.div`  \r\n  width: 850px;\r\n  height: 460px;   \r\n  display: flex;   \r\n  border-radius: 16px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default LoaderWrapper;\r\n","import React from 'react';\r\nimport LoaderWrapper from \"./style\";\r\nimport * as legoAnimation from \"../../../Assets/lotties/410-lego-loader\";\r\nimport * as doneAnimation from \"../../../Assets/lotties/433-checked-done\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport Lottie from \"react-lottie\";\r\n\r\n\r\nconst legoConfig = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: legoAnimation.default,\r\n    rendererSettings: {\r\n        preserveAspectRatio: \"xMidYMid slice\"\r\n    }\r\n}\r\nconst successConfig = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: doneAnimation.default,\r\n    rendererSettings: {\r\n        preserveAspectRatio: \"xMidYMid slice\"\r\n    }\r\n}\r\n\r\nexport default function (props) {\r\n    return (\r\n        <LoaderWrapper>\r\n            <FadeIn>\r\n                <Lottie options={props.done ? successConfig : legoConfig} height={400} width={400} />\r\n            </FadeIn>\r\n        </LoaderWrapper>\r\n    )\r\n}","const ParticleConfig = {\r\n    \"particles\": {\r\n        \"number\": {\r\n            \"value\": 80,\r\n            \"density\": {\r\n                \"enable\": false\r\n            }\r\n        },\r\n        \"size\": {\r\n            \"value\": 3,\r\n            \"random\": true,\r\n            \"anim\": {\r\n                \"speed\": 4,\r\n                \"size_min\": 0.3\r\n            }\r\n        },\r\n        \"line_linked\": {\r\n            \"enable\": false\r\n        },\r\n        \"move\": {\r\n            \"random\": true,\r\n            \"speed\": 1,\r\n            \"direction\": \"top\",\r\n            \"out_mode\": \"out\"\r\n        },\r\n        \"color\": \"#d1e2ff\"\r\n    },\r\n    \"interactivity\": {\r\n        \"events\": {\r\n            \"onhover\": {\r\n                \"enable\": false,\r\n                \"mode\": \"bubble\"\r\n            },\r\n            \"onclick\": {\r\n                \"enable\": false,\r\n                \"mode\": \"repulse\"\r\n            }\r\n        },\r\n        \"modes\": {\r\n            \"bubble\": {\r\n                \"distance\": 250,\r\n                \"duration\": 2,\r\n                \"size\": 0,\r\n                \"opacity\": 0\r\n            },\r\n            \"repulse\": {\r\n                \"distance\": 400,\r\n                \"duration\": 4\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ParticleConfig;","import React, {useEffect, useState} from \"react\";\r\nimport SetupPageWrapper, {StepWrapper} from \"./styles\";\r\nimport DBStep from '../../../Components/Setup/Database';\r\nimport InfoStep from '../../../Components/Setup/Information';\r\nimport FinalStep from '../../../Components/Setup/Finish';\r\nimport SystemStep from '../../../Components/Setup/System';\r\nimport Loader from '../../../Components/Setup/Loader';\r\nimport {Steps} from \"antd\";\r\nimport ParticleConfig from \"./config\";\r\nimport Particles from \"react-particles-js\";\r\nimport Helmet from \"react-helmet\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport agent from \"../../../Utilities/agent\";\r\n\r\nconst { Step } = Steps;\r\n\r\nexport default function SetupPage(props) {\r\n    const [current, setCurrent] = useState(0);\r\n    const [loadProgress, setLoadProgress] = useState(0);\r\n    const CurrentStep = steps[current].component;\r\n\r\n    useEffect(() => {\r\n        agent.Setup.status().then(res => {\r\n            setCurrent(res.data);\r\n            setLoadProgress(1);\r\n            setTimeout(() => {\r\n                setLoadProgress(2);\r\n            }, 500);\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <SetupPageWrapper>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>{`QLHS - ${steps[current].title}`}</title>\r\n            </Helmet>\r\n            {loadProgress >= 2 ? (\r\n                <FadeIn>\r\n                    <div className=\"setup-container\">\r\n                        <div className=\"left-side\">\r\n                            <div className=\"header\">\r\n                            </div>\r\n                            <div className=\"content\">\r\n                                <Steps direction=\"vertical\" current={current}>\r\n                                    {steps.map((step, index) => (\r\n                                        <Step key={index} title={step.name} description={step.description} />\r\n                                    ))}\r\n                                </Steps>\r\n                            </div>\r\n                            <div className=\"footer\">\r\n                                <span>T9 Team ©2020</span>\r\n                            </div>\r\n                            <Particles params={ParticleConfig} className=\"particle\"/>\r\n                        </div>\r\n                        <div className=\"right-side\">\r\n                            <h1 className=\"title\">{steps[current].title}</h1>\r\n                            <StepWrapper>\r\n                                <CurrentStep step={current} onNext={(value) => setCurrent(value)}/>\r\n                            </StepWrapper>\r\n                        </div>\r\n                    </div>\r\n                </FadeIn>\r\n            ) : (\r\n                <Loader done={loadProgress == 1}/>\r\n            )}\r\n        </SetupPageWrapper>\r\n    )\r\n}\r\n\r\nconst steps = [\r\n    {\r\n        name: \"Database\",\r\n        title: \"Database Setup\",\r\n        component: DBStep,\r\n        description: \"Database setup\"\r\n    },\r\n    // {\r\n    //     name: \"System\",\r\n    //     title: \"System Information\",\r\n    //     component: SystemStep,\r\n    //     description: \"System config\"\r\n    // },\r\n    {\r\n        name: \"Information\",\r\n        title: \"Information needed\",\r\n        component: InfoStep,\r\n        description: \"Admin information setup\"\r\n    },\r\n    {\r\n        name: \"Finish\",\r\n        title: \"Finish\",\r\n        component: FinalStep,\r\n        description: null\r\n    }\r\n];","import React, {useState} from \"react\";\r\nimport {Button, Input} from \"antd\";\r\nimport DatabaseWrapper from \"../Database/style\";\r\nimport InformationWrapper from \"./style\";\r\nimport FadeIn from \"react-fade-in\";\r\n\r\nexport default function (props) {\r\n    const [error, setError] = useState(0);\r\n    const [name, setName] = useState();\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [email, setEmail] = useState();\r\n\r\n    const onSubmit = () => {\r\n        if (!name || !username || !password || !email) {\r\n            setError(1);\r\n            return;\r\n        }\r\n\r\n        props.onNext(props.step + 1);\r\n    }\r\n\r\n    return (\r\n        <DatabaseWrapper>\r\n            <FadeIn>\r\n                <InformationWrapper className=\"page-container\">\r\n                    <label>\r\n                        Please provide the following information. Don't worry, you can always change these settings later.\r\n                    </label>\r\n                    <div className=\"st-form\">\r\n                        <table>\r\n                            <tbody>\r\n                            <tr>\r\n                                <th className=\"st-label\">\r\n                                    Your name\r\n                                </th>\r\n                                <th className=\"st-input-info\">\r\n                                    <Input value={name} onChange={(evt) => setName(evt.target.value)} />\r\n                                </th>\r\n                                <th className=\"st-description\">\r\n                                    Your full name.\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"st-label\">\r\n                                    Username\r\n                                </th>\r\n                                <th className=\"st-input-info\">\r\n                                    <Input value={username} onChange={(evt) => setUsername(evt.target.value)} />\r\n                                </th>\r\n                                <th className=\"st-description\">\r\n                                    Your login username.\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"st-label\">\r\n                                    Password\r\n                                </th>\r\n                                <th className=\"st-input-info\">\r\n                                    <Input.Password value={password} onChange={(evt) => setPassword(evt.target.value)} />\r\n                                </th>\r\n                                <th className=\"st-description\">\r\n                                    <b>Important:</b> You will need this password to login. Please store it in the secure location.\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"st-label\">\r\n                                    Your email\r\n                                </th>\r\n                                <th className=\"st-input-info\">\r\n                                    <Input value={email} onChange={(evt) => setEmail(evt.target.value)} />\r\n                                </th>\r\n                                <th className=\"st-description\">\r\n                                    Please check your email address before continuing.\r\n                                </th>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"st-controller\">\r\n                            <Button onClick={onSubmit}>Submit</Button>\r\n                        </div>\r\n                    </div>\r\n                </InformationWrapper>\r\n            </FadeIn>\r\n        </DatabaseWrapper>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {Button, Input} from \"antd\";\r\nimport DatabaseWrapper from \"../Database/style\";\r\nimport FinishWrapper from \"./style\";\r\nimport FadeIn from \"react-fade-in\";\r\n\r\nexport default function (props) {\r\n    const [error, setError] = useState(0);\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    const onSubmit = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <DatabaseWrapper>\r\n            <FadeIn>\r\n                <FinishWrapper className=\"page-container\">\r\n                    <label>\r\n                        This is small tool to check your login information. Just enter your username and password to the form then click Check button.\r\n                    </label>\r\n                    <div className=\"st-form\">\r\n                        <table>\r\n                            <tbody>\r\n                            <tr>\r\n                                <th className=\"st-label\">\r\n                                    Username\r\n                                </th>\r\n                                <th className=\"st-input-info\">\r\n                                    <Input value={username} onChange={(evt) => setUsername(evt.target.value)} />\r\n                                </th>\r\n                                <th className=\"st-description\">\r\n                                    Your login username.\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"st-label\">\r\n                                    Password\r\n                                </th>\r\n                                <th className=\"st-input-info\">\r\n                                    <Input.Password value={password} onChange={(evt) => setPassword(evt.target.value)} />\r\n                                </th>\r\n                                <th className=\"st-description\">\r\n                                    The password which you've entered in the previous step.\r\n                                </th>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"st-controller-finish\">\r\n                            <Button onClick={onSubmit}>Check</Button>\r\n                            <Button onClick={onSubmit}>Submit</Button>\r\n                        </div>\r\n                    </div>\r\n                </FinishWrapper>\r\n            </FadeIn>\r\n        </DatabaseWrapper>\r\n    )\r\n}\r\n","import React from 'react';\r\n//import SLogin from './../Sites/Login/Login';\r\nimport LoginPage from '../Containers/Pages/Login/Login';\r\nimport TestLogin from '../Containers/Pages/TestLogin/TestLogin';\r\nimport SetupPage from \"../Containers/Pages/Setup\";\r\n\r\nconst routes = [\r\n    {\r\n        path : '/',\r\n        exact : true,\r\n        main : () => <TestLogin/>\r\n    },\r\n    {\r\n        path : '/setup',\r\n        exact : true,\r\n        main : () => <SetupPage />\r\n    },\r\n];\r\n\r\nexport default routes;","import React from 'react';\r\nimport {\r\n    HomeOutlined,\r\n    UserOutlined,\r\n    ApartmentOutlined,\r\n    FolderOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport TextTranslation from '../TextTranslation/TextTranslation';\r\n\r\n\r\nconst LAMenu_Structure =\r\n[\r\n    {\r\n        \"key\" : \"homepage\",\r\n        \"displayName\" : <TextTranslation textName=\"LMenu-Homepage.1\"/>,\r\n        \"icon\" : <HomeOutlined/>,\r\n        \"to\" : \"/\"\r\n    },\r\n    {\r\n        \"key\" : \"personal\",\r\n        \"displayName\" : <TextTranslation textName=\"LMenu-Personal.1\"/>,\r\n        \"icon\" : <UserOutlined/>,\r\n        \"children\" : [\r\n            {\r\n                \"key\" : \"profile\",\r\n                \"displayName\" : <TextTranslation textName=\"LMenu-Profile.1\"/>,\r\n                \"to\" : \"/profile\"\r\n            },\r\n            {\r\n                \"key\" : \"schedule\",\r\n                \"displayName\" : <TextTranslation textName=\"LMenu-Schedule.1\"/>,\r\n                \"to\" : \"/schedule\"\r\n            },\r\n            {\r\n                \"key\" : \"inbox\",\r\n                \"displayName\" : <TextTranslation textName=\"LMenu-Inbox.1\"/>,\r\n                \"to\" : \"/inbox\"\r\n            },\r\n            {\r\n                \"key\" : \"sent\",\r\n                \"displayName\" : <TextTranslation textName=\"LMenu-Sent.1\"/>,\r\n                \"to\" : \"/sent\"\r\n            },\r\n            {\r\n                \"key\" : \"archive\",\r\n                \"displayName\" : <TextTranslation textName=\"LMenu-Archive.1\"/>,\r\n                \"to\" : \"/archive\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"key\" : \"usage\",\r\n        \"displayName\" : <TextTranslation textName=\"LMenu-Usage.1\"/>,\r\n        \"icon\" : <ApartmentOutlined/>,\r\n        \"children\" : [\r\n            {\r\n                \"key\" : \"system\",\r\n                \"displayName\" : <TextTranslation textName=\"LMenu-System.1\"/>,\r\n                \"to\" : \"/system\"\r\n            },\r\n            {\r\n                \"key\" : \"users\",\r\n                \"displayName\" : <TextTranslation textName=\"LMenu-Users.1\"/>,\r\n                \"to\" : \"/users\"\r\n            },\r\n            {\r\n                \"key\" : \"visitation\",\r\n                \"displayName\" : <TextTranslation textName=\"LMenu-Visitation.1\"/>,\r\n                \"to\" : \"/visitation\"\r\n            },\r\n            \r\n        ]\r\n    },\r\n    {\r\n        \"key\" : \"classes\",\r\n        \"displayName\" : <TextTranslation textName=\"LMenu-Classes.1\"/>,\r\n        \"icon\" : <FolderOutlined/>,\r\n        \"children\" : [\r\n            \r\n        ]\r\n    },\r\n    \r\n\r\n];\r\n\r\nexport default LAMenu_Structure;","import React from 'react';\r\nimport './TopBar.css';\r\nimport { Avatar, Badge, Menu, Dropdown } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst TopBar = () => {\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(\"userData\");\r\n        window.location.reload();\r\n    }\r\n\r\n    const menu = (\r\n      <Menu>\r\n        <Menu.Item key=\"0\" >\r\n          <a>Profile</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"1\">\r\n          <a href=\"/settings\">Settings</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\">\r\n          <a href=\"/settings\">Activity Log</a>\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item key=\"3\" onClick={logout}>Logout</Menu.Item>\r\n      </Menu>\r\n  );\r\n\r\n    return(\r\n        \r\n        <div id=\"topbar-wrapper\">\r\n            <Dropdown overlay={menu} trigger={['click']}>\r\n                <span className=\"avatar-item\" id=\"topbar-avatar\" >\r\n                    <Badge count={1}>\r\n                    <Avatar shape=\"square\" icon={<UserOutlined />} />\r\n                    </Badge>\r\n                </span>\r\n            </Dropdown>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default TopBar;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport { Layout, Menu, Breadcrumb, message } from 'antd';\r\n\r\n\r\nimport './MainLayout.css';\r\n\r\nimport {NavLink} from 'react-router-dom';\r\nimport LAMenu_Structure from '../../Components/LAMenu/LAMenu_Structure';\r\n\r\nimport {updateClassData} from '../../Redux/Actions/updateClassData';\r\n\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderDemo = (props) => {\r\n  \r\n    \r\n\r\n    const [resultMenuStructure, setResultMenuStructure] = useState([]);\r\n\r\n    const [classes, setClasses] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        setResultMenuStructure(renderLAMenuStructure(LAMenu_Structure, false));\r\n    },[classes]);\r\n\r\n    useEffect(()=>{\r\n        fetch('https://api.kunbr0.com/se104/classes.php')\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n\r\n\r\n            .then((classes) => {\r\n                console.log(classes);\r\n                \r\n                message.success('Loaded class data');\r\n                setClasses(classes);\r\n                props.dispatch(updateClassData(classes));\r\n\r\n\r\n                /*setTimeout(function() {\r\n                    document.body.classList.add(\"loaded\");\r\n                }, 500);*/\r\n            })\r\n            \r\n            .catch((error) => {\r\n\r\n            });\r\n            \r\n        }, []);\r\n\r\n\r\n    const renderLAMenuStructure = (kStruct, isSubMenu, parentMenu) =>{\r\n\r\n        let kElm = [];\r\n\r\n        for(let str of kStruct){\r\n\r\n            if(str.children){\r\n                kElm.push(renderLAMenuStructure(str.children, true, str));\r\n            }else{\r\n                kElm.push(\r\n                    <Menu.Item key={str.key} icon={str.icon}>\r\n                        <NavLink  to={str.to}>{str.displayName}</NavLink>\r\n                    </Menu.Item>);\r\n            }\r\n\r\n        }\r\n        if(isSubMenu){\r\n            let classesElm;\r\n            if(parentMenu.key === 'classes' && classes){\r\n                classesElm = classes.map((e)=>{\r\n                    return (\r\n                        <Menu.Item key={e.classID}>\r\n                            <NavLink to={`/class/${e.className}`}>{e.className}</NavLink>\r\n                        </Menu.Item>\r\n                    )\r\n                });\r\n                \r\n            }\r\n            return(\r\n                <SubMenu key={parentMenu.key} icon={parentMenu.icon} title={parentMenu.displayName}>\r\n                    {kElm}\r\n                    {classesElm}\r\n                </SubMenu>\r\n            );\r\n        }\r\n        return kElm;\r\n    }\r\n\r\n    const [collapsed, setCollapsed] = useState(false); \r\n\r\n    const onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        setCollapsed(collapsed);\r\n    };\r\n  \r\n    console.log(props);\r\n\r\n    return (\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu  theme=\"dark\" defaultSelectedKeys={['homepage']} mode=\"inline\" style={\r\n                {\r\n                    paddingTop : \"64px\"\r\n                }\r\n            }>\r\n            {resultMenuStructure}\r\n            </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n            <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n                <TopBar />\r\n            </Header>\r\n            <Content style={{ margin: '0 16px' }}>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>QLHS</Breadcrumb.Item>\r\n                <Breadcrumb.Item>Homepage</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            \r\n            <Switch>\r\n                {props.kRoutes}\r\n                <Route>\r\n                    <Redirect to={{pathname: '/'}}/>\r\n                </Route>\r\n            </Switch>\r\n            \r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>T9 Team ©2020 </Footer>\r\n        </Layout>\r\n        </Layout>\r\n    );\r\n  \r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        classData : state.classData\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SiderDemo);\r\n","\r\nexport const updateClassData = (classData)=>{\r\n    \r\n    return {\r\n        type : 'updateClassData',\r\n        classData : classData\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\n//import LMenu from './../../Components/LMenu/LMenu';\r\n// import MLMenu from './../../Components/LMenu/MLMenu';\r\n// import TopBar from './../../Components/TopBar/TopBar';\r\n// import Loader from './../../MainLoader/Loader';\r\n// import LAMenu from './../../Components/LAMenu/LAMenu';\r\nimport MainLayout from './../MainLayout/MainLayout';\r\n\r\n\r\nconst LoggedRoutes = ({routes})=>{\r\n\r\n    const showRoutes = (routes) => {\r\n        var result = null;\r\n        //console.log(localStorage.getItem('user'));\r\n        if(routes.length > 0){\r\n            result = routes.map((route, index) => {\r\n                return (\r\n                    <Route \r\n                        key={index}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        component={route.main}\r\n                    />\r\n    \r\n                    \r\n                );\r\n                \r\n            })\r\n            \r\n        }\r\n        return result;\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <MainLayout kRoutes={showRoutes(routes)}/>\r\n    );\r\n}\r\n\r\nexport default LoggedRoutes;","import React from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\n//   import LMenu from './../../Components/LMenu/LMenu';\r\n//   import MLMenu from './../../Components/LMenu/MLMenu';\r\n//   import TopBar from './../../Components/TopBar/TopBar';\r\n//   import Loader from './../../MainLoader/Loader';\r\n\r\n\r\n\r\n\r\nconst GuestRoutes = ({routes})=>{\r\n\r\n    const showRoutes = (routes) => {\r\n        var result = null;\r\n        //console.log(localStorage.getItem('user'));\r\n        if(routes.length > 0){\r\n            result = routes.map((route, index) => {\r\n                return (\r\n                    <Route \r\n                        key={index}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        component={route.main}\r\n                    />\r\n    \r\n                    \r\n                );\r\n                \r\n            })\r\n            \r\n        }\r\n        return result;\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                {showRoutes(routes)}\r\n                <Route>\r\n                    <Redirect to={{pathname: '/'}}/>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GuestRoutes;","import React from 'react';\r\n\r\nimport loggedroutes from './../Routes/LoggedRoutes';\r\nimport guestroutes from './../Routes/GuestRoutes';\r\n\r\nimport LoggedRoutes from './LoggedRoutes/LoggedRoutes';\r\nimport GuestRoutes from './GuestRoutes/GuestRoutes';\r\nimport './App.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n  } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            { localStorage.getItem('userData') ?\r\n                <LoggedRoutes routes={loggedroutes}/> :\r\n                <GuestRoutes routes={guestroutes}/>\r\n            }\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n    classData : []\r\n}\r\n\r\nconst ClassData = (state = initialState, action)=>{\r\n    console.log(action);\r\n    switch(action.type){\r\n        case 'updateClassData' : return {classData : action.classData};\r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport default ClassData;","import actions from './actions'\r\nimport themes from \"../../Components/ThemeSwitcher/ThemeStore\";\r\n\r\nconst initState = {\r\n    current: themes.light\r\n}\r\n\r\nexport default function (state = initState, action) {\r\n    switch (action.type) {\r\n        case actions.CHANGE_THEME:\r\n            return {current: action.theme};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport classData from './Reducers/classData';\r\nimport themeSwitcher from './ThemeSwitcher/reducers'\r\n\r\nexport default combineReducers({\r\n    classData,\r\n    themeSwitcher,\r\n});","import { all } from 'redux-saga/effects';\r\n\r\nexport default function* rootSaga(getState) {\r\n    yield all([\r\n    ]);\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './root-reducer';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst promiseMiddleware = store => next => action => {\r\n    if (isPromise(action.payload)) {\r\n        const currentView = store.getState().viewChangeCounter;\r\n        const skipTracking = action.skipTracking;\r\n\r\n        action.payload.then(\r\n            res => {\r\n                const currentState = store.getState()\r\n                if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n                    return\r\n                }\r\n                action.payload = res;\r\n                store.dispatch(action);\r\n            },\r\n            error => {\r\n                const currentState = store.getState()\r\n                if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n                    return\r\n                }\r\n                action.error = true;\r\n                action.payload = error;\r\n                store.dispatch(action);\r\n            }\r\n        );\r\n\r\n        return;\r\n    }\r\n\r\n    next(action);\r\n};\r\nconst middlewares = [thunk, promiseMiddleware, sagaMiddleware];\r\n\r\nconst bindMiddleware = middleware => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        const { composeWithDevTools } = require('redux-devtools-extension');\r\n        return composeWithDevTools(applyMiddleware(...middleware));\r\n    }\r\n    return applyMiddleware(...middleware);\r\n};\r\n\r\nfunction isPromise(v) {\r\n    return v && typeof v.then === 'function';\r\n}\r\n\r\nconst store = createStore(rootReducer, bindMiddleware(middlewares));\r\nsagaMiddleware.run(rootSaga);\r\nexport default store;\r\n","import React from 'react';\r\nimport FadeIn from \"react-fade-in\";\r\nimport Lottie from \"react-lottie\";\r\nimport * as maintenanceAnimation from \"./Assets/lotties/12366-under-construction\";\r\n\r\nconst maintenanceConfig = {\r\n  loop: true,\r\n  autoplay: true,\r\n  animationData: maintenanceAnimation.default,\r\n  rendererSettings: {\r\n    preserveAspectRatio: \"xMidYMid slice\"\r\n  }\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n          <div className=\"h-100 d-flex justify-content-center align-items-center\">\r\n            <FadeIn>\r\n              <div className=\"align-items-center row\">\r\n                <Lottie options={maintenanceConfig} height={400} width={400} />\r\n              </div>\r\n              <h1>Website is under construction</h1>\r\n            </FadeIn>\r\n          </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {ConfigProvider} from \"antd\";\r\nimport enUS from 'antd/es/locale/en_US';\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport default function AppProvider({children}) {\r\n\r\n    const currentTheme = useSelector(state => state.themeSwitcher.current);\r\n\r\n    return (\r\n        <ConfigProvider locale={enUS}>\r\n            <ThemeProvider theme={currentTheme}>\r\n                {children}\r\n            </ThemeProvider>\r\n        </ConfigProvider>\r\n    );\r\n}","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// not like to use this?\r\n// have a look at the Quick start guide \r\n// for passing in lng and translations on init\r\n\r\nconst Languages = [\"en\", \"vi\", \"cn\"];\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: 'en',\r\n    debug: true,\r\n    whitelist: Languages,\r\n    \r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    }\r\n  });\r\n\r\n\r\nexport default i18n;","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App/App';\r\nimport {Provider} from 'react-redux';\r\nimport store from \"./Redux/store\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport AppProvider from \"./AppProvider\";\r\nimport 'antd/dist/antd.css';\r\nimport './i18n';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <AppProvider>\r\n            <ErrorBoundary>\r\n                <Suspense fallback=\"loading\">\r\n                    <App />\r\n                </Suspense>\r\n            </ErrorBoundary>\r\n        </AppProvider>\r\n    </Provider>\r\n    \r\n,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}