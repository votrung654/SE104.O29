{"version":3,"sources":["Utilities/agent.js","Assets/img/bg.png","Containers/Pages/Homepage/Homepage.js","Containers/System/System.js","Hooks/http-hook.js","Components/ThemeSwitcher/style.js","Redux/ThemeSwitcher/actions.js","Components/ThemeSwitcher/ThemeStore/light.js","Components/ThemeSwitcher/ThemeStore/dark.js","Components/ThemeSwitcher/ThemeStore/index.js","Components/ThemeSwitcher/index.js","Containers/Pages/TestLogin/TestLogin.js","Components/SelectWithTyping/SelectWithTyping.js","Components/ButtonWithLoading/ButtonWithLoading.js","Components/LocationPicker/LocationPicker.js","Components/Input-Email/InputEmail.js","Components/AddNewStudent/AddNewStudent.js","Components/Statistic/Statistic.js","Components/TextTranslation/TextTranslation.js","Components/StudentScoresTable/StudentScoresTable.js","Containers/ClassDetails/ClassDetails.js","Components/BigCalendar/BigCalendar.js","Containers/Schedule/Schedule.js","Containers/Profile/Profile.js","Routes/LoggedRoutes.js","Containers/Pages/Setup/styles.js","Components/Setup/Database/style.js","Components/Setup/Database/index.js","Components/Setup/Database/Form/mysql.js","Components/Setup/Database/Form/mssql.js","Components/Setup/Database/Form/sqlite.js","Components/Setup/Information/style.js","Components/Setup/Finish/style.js","Components/Setup/System/style.js","Components/Setup/Loader/style.js","Components/Setup/Loader/index.js","Containers/Pages/Setup/config.js","Containers/Pages/Setup/index.js","Components/Setup/Information/index.js","Components/Setup/Finish/index.js","Routes/GuestRoutes.js","Components/LAMenu/LAMenu_Structure.js","Components/TopBar/TopBar.js","App/MainLayout/MainLayout.js","Redux/Actions/updateClassData.js","App/LoggedRoutes/LoggedRoutes.js","App/GuestRoutes/GuestRoutes.js","App/App.js","Redux/Reducers/classData.js","Redux/ThemeSwitcher/reducers.js","Redux/root-reducer.js","Redux/root-saga.js","Redux/store.js","ErrorBoundary.js","AppProvider.js","i18n.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","responseBody","encodeURIComponent","res","body","tokenPlugin","req","requests","url","get","use","then","post","Auth","login","username","password","email","Setup","status","setToken","_token","module","exports","Homepage","useState","isLoading","setIsLoading","useEffect","setTimeout","className","direction","style","width","loading","title","SSystem","i18n","useTranslation","menu","onClick","lang","key","changeLanguage","Item","target","rel","overlay","e","preventDefault","DownOutlined","useHttpClient","activeHttpRequests","useRef","sendRequest","useCallback","a","method","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","forEach","abortCtrl","abort","ThemeSwitcherWrapper","styled","div","palette","actions","CHANGE_THEME","changeTheme","theme","type","background","text","primary","pre","themes","light","dark","props","dispatch","useDispatch","onChange","checked","checkedChildren","unCheckedChildren","TestLogin","setUsername","setPassword","pwClass","setPwClass","id","placeholder","evt","value","onFocus","onBlur","agent","console","log","localStorage","setItem","token","window","location","reload","href","ThemeSwitcher","Option","Select","SelectWithTyping","optionElms","classes","options","length","map","optionName","renderOptions","showSearch","optionFilterProp","callbackSelection","onSearch","val","filterOption","input","option","children","toLowerCase","indexOf","disabled","ButtonWithLoading","LocationPicker","areaInSelectedCity","setAreaInSelectedCity","mapAreasToArray","areas","result","Object","values","area","name","cityOptions","LocationVN","city","optionKey","selectedCity","cities","InputEmail","rules","marginBottom","AddNewStudent","visible","setVisible","onClose","classData","PlusOutlined","bodyStyle","paddingBottom","footer","textAlign","marginRight","layout","hideRequiredMark","gutter","span","label","required","message","getPopupContainer","trigger","parentNode","TextArea","rows","Statistic","statisticData","setStatisticData","modalVisible","setModalVisible","centered","onOk","onCancel","bordered","pClassName","pSubject","percent","strokeColor","TextTranslation","textName","kClass","t","columns","dataIndex","fixed","filters","onFilter","record","sorter","b","studentID","StudentScoresTable","classDetailsData","setClassDetailsData","tableData","setTableData","tableEditable","setTableEditable","renderClassDetailsData","data","i","coef","ScoreCoefficient","k15mins","k45mins","kmidterm","calculateFinalScore","keys","min","max","defaultValue","dataSource","size","scroll","x","y","expandable","connect","state","match","params","classCode","selectedClass","setSelectedClass","selectedSubject","setSelectedSubject","Panel","Collapse","selectedClassDetailsData","setSelectedClassDetailsData","isFetchingClassDetailsData","setIsFetchingClassDetailsData","useHistory","defaultActiveKey","expandIcon","isActive","CaretRightOutlined","rotate","header","Subjectslist","ms","response","json","resolve","students","success","catch","error","maxTimeLoading","marginLeft","backgroundColor","borderColor","danger","dateCellRender","listData","date","content","getListData","item","monthCellRender","num","month","getMonthData","BigCalendar","setValue","moment","selectedValue","setSelectedValue","margin","format","fullscreen","padding","onSelect","onPanelChange","Schedule","Profile","routes","path","exact","main","SetupPageWrapper","bgImage","StepWrapper","DatabaseWrapper","sqls","MYSQL","db","setDB","user","setUser","pass","setPass","host","setHost","port","setPort","prefix","setPrefix","db_server","db_name","hostname","tb_prefix","Password","MSSQL","SQLITE","InformationWrapper","FinishWrapper","LoaderWrapper","legoConfig","loop","autoplay","animationData","legoAnimation","rendererSettings","preserveAspectRatio","successConfig","doneAnimation","done","height","ParticleConfig","Step","Steps","SetupPage","setCurrent","loadProgress","setLoadProgress","CurrentStep","steps","component","Helmet","charSet","step","index","description","onNext","Loader","sql","setSQL","setError","setData","SqlForm","setName","setEmail","onSubmit","LAMenu_Structure","HomeOutlined","UserOutlined","ApartmentOutlined","FolderOutlined","TopBar","Divider","removeItem","count","shape","icon","Header","Layout","Content","Footer","Sider","SubMenu","Menu","resultMenuStructure","setResultMenuStructure","setClasses","renderLAMenuStructure","updateClassData","kStruct","isSubMenu","parentMenu","classesElm","kElm","str","to","displayName","classID","collapsed","setCollapsed","minHeight","collapsible","onCollapse","defaultSelectedKeys","mode","paddingTop","kRoutes","pathname","LoggedRoutes","route","showRoutes","GuestRoutes","App","getItem","loggedroutes","guestroutes","initialState","ClassData","action","initState","combineReducers","themeSwitcher","rootSaga","getState","all","sagaMiddleware","createSagaMiddleware","middlewares","thunk","store","next","v","payload","currentView","viewChangeCounter","skipTracking","currentState","middleware","createStore","rootReducer","applyMiddleware","run","maintenanceConfig","ErrorBoundary","hasError","this","React","Component","AppProvider","currentTheme","useSelector","locale","enUS","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","interpolation","escapeValue","ReactDOM","render","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.5a1e3914.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise';\nimport _superagent from 'superagent';\n\nconst superagent = superagentPromise(_superagent, global.Promise);\n\nconst API_ROOT = `https://api.kunbr0.com/se104`;\n\nconst encode = encodeURIComponent;\nconst responseBody = res => res.body;\n\nlet token = null;\nconst tokenPlugin = req => {\n  if (token) {\n    //req.set('authorization', `${token}`);\n  }\n}\n\nconst requests = { //.withCredentials()\n  del: url =>\n    superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  get: url =>\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  put: (url, body) =>\n    superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\n  post: (url, body) =>\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody)\n};\n\nconst Auth = {\n  login: (username, password) =>\n      requests.post('/login/index.php', {email: username, password: password}),\n}\n\nconst Setup = {\n  status: () => requests.get('/setup/status')\n}\n\nexport default {\n  Auth,\n  Setup,\n  setToken: _token => { token = _token; }\n};\n","module.exports = __webpack_public_path__ + \"static/media/bg.6b7a5417.png\";","import React,{useState, useEffect}  from 'react';\nimport { Space,Card } from 'antd';\nimport './Homepage.css';\n\n\nconst Homepage = () => {\n    \n    const mainSpaceStyle = {\n        width : \"10%\",\n        \n    }\n\n    const [isLoading, setIsLoading] = useState(false);\n    useEffect(()=>{\n        setIsLoading(true);\n        setTimeout(()=>{setIsLoading(false)},500);\n    },[]);\n\n    return(\n\n        <div className=\"site-card-border-less-wrapper\">\n            <Space direction=\"horizontal\" style={mainSpaceStyle}>\n                <Card loading={isLoading} title=\"Events\" style={{ width: 300 }}>\n                    <p>SE104 - 1.2.3 in A 102</p>\n                    <p>IT007 - 6.7.8 in E 3.2</p>\n                </Card>\n                <Card loading={isLoading} title=\"Tasks\" style={{ width: 300 }}>\n                    <p>Midterm Examination 2020</p>\n                    <p>Project Summary Weekly</p>\n                </Card>\n                \n                \n            </Space>\n            \n        </div>\n\n    )\n\n}\n\nexport default Homepage;\n","import React from 'react';\nimport { Menu, Dropdown , message } from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\nimport \"./System.css\"\nimport {useTranslation} from 'react-i18next';\n\n\n\nconst SSystem = () => \n{\n    const { i18n } = useTranslation();\n    const handleChangeLanguage = (lang) => {\n    i18n.changeLanguage(lang);\n}\n\n\nconst onClick = ({ key }) => {\n    //message.info(`Click on item ${key}`);\n    handleChangeLanguage(key);\n};\n\nconst menu = (\n    <Menu onClick={onClick}>\n      <Menu.Item key=\"en\">\n        <a target=\"_blank\" rel=\"noopener noreferrer\">\n          English\n        </a>\n      </Menu.Item>\n      <Menu.Item key=\"vi\">\n        <a target=\"_blank\" rel=\"noopener noreferrer\">\n          Vietnamese\n        </a>\n      </Menu.Item>\n      <Menu.Item key=\"cn\">\n        <a target=\"_blank\" rel=\"noopener noreferrer\">\n          Chinese\n        </a>\n      </Menu.Item>\n      <Menu.Item>blah</Menu.Item>\n    </Menu>\n  );\n\n\n\n    return (\n        <Dropdown overlay={menu}>\n            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n            Language <DownOutlined />\n            </a>\n        </Dropdown>\n    );\n}\n\nexport default SSystem;","import { useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n\n    const httpAbortCtrl = new AbortController();\n    activeHttpRequests.current.push(httpAbortCtrl);\n\n    return fetch(url, {\n            method,\n            body,\n            headers,\n            signal: httpAbortCtrl.signal\n        });    \n    },[]);\n\n\n    useEffect(() => {\n    return () => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n\n    }, []);\n\n    return { sendRequest };\n};\n","import  styled from 'styled-components';\nimport {palette} from 'styled-theme';\n\nconst ThemeSwitcherWrapper = styled.div`\n    background: ${palette('background', 0)};\n    \n    p {\n      color: ${palette('text', 0)};\n    }\n`;\n\nexport default ThemeSwitcherWrapper;","const actions = {\n\n    CHANGE_THEME: \"CHANGE_THEME\",\n\n    changeTheme: (theme) => ({\n        type: actions.CHANGE_THEME,\n        theme: theme,\n    }),\n}\n\nexport default actions;","const theme = {}\n\ntheme.palette = {\n    background: [\n        '#fff'\n    ],\n    text: [\n        '#000'\n    ],\n    primary: [\n        '#005bff'\n    ]\n}\n\ntheme.fonts = {\n    primary: 'Roboto, sans-serif',\n    pre: 'Consolas, Liberation Mono, Menlo, Courier, monospace',\n};\n\nexport default theme;","const theme = {}\n\ntheme.palette = {\n    background: [\n        '#000'\n    ],\n    text: [\n        '#fff'\n    ],\n    primary: [\n        '#001d4e'\n    ]\n}\n\ntheme.fonts = {\n    primary: 'Roboto, sans-serif',\n    pre: 'Consolas, Liberation Mono, Menlo, Courier, monospace',\n};\n\nexport default theme;","import lightTheme from './light';\nimport darkTheme from './dark';\n\nconst themes = {\n    light: lightTheme,\n    dark: darkTheme\n};\n\nexport const themesConfig = {\n    topbar: 'light',\n    sidebar: 'light',\n    layout: 'light',\n    theme: 'light',\n};\n\nexport default themes;\n","import  React from 'react';\nimport ThemeSwitcherWrapper from \"./style\";\nimport {useDispatch} from \"react-redux\";\nimport actions from \"../../Redux/ThemeSwitcher/actions\";\nimport themes from \"./ThemeStore\";\nimport {Switch} from \"antd\";\n\nexport default function (props) {\n    const dispatch = useDispatch();\n\n    const changeTheme = (checked) => {\n        if (checked) {\n            dispatch(actions.changeTheme(themes.dark));\n        } else {\n            dispatch(actions.changeTheme(themes.light));\n        }\n    }\n\n    return (\n        <ThemeSwitcherWrapper>\n            <Switch onChange={changeTheme} checkedChildren={\"Dark\"} unCheckedChildren={\"Light\"}/>\n        </ThemeSwitcherWrapper>\n    )\n\n}","import React, { useState } from 'react';\nimport {Button} from 'antd'\nimport './TestLogin.css';\nimport { useHttpClient } from '../../../Hooks/http-hook';\nimport agent from \"../../../Utilities/agent\";\nimport ThemeSwitcher from '../../../Components/ThemeSwitcher';\n\n\nexport default function TestLogin() {\n\n    const [username, setUsername] = useState();\n    const [password, setPassword] = useState();\n\n    const [pwClass, setPwClass] = useState('');\n    const { sendRequest } = useHttpClient();\n\n    const login = (e) => {\n        if(e) e.preventDefault();\n        // sendLoginRequest(username, password);\n        agent.Auth.login(username, password).then(res => {\n            console.log(res);\n            localStorage.setItem(\"userData\", res.token);\n            window.location.reload();\n        })\n    }\n\n    const loginSuccessfully = (userData) =>{\n\n        userData.then((data)=>{\n            localStorage.setItem(\"userData\", data.token);\n        });\n        \n        window.location.reload();\n    }\n\n    const sendLoginRequest = (user, pass) =>{\n        sendRequest(\n            \"https://api.kunbr0.com/se104/login/index.php\",\n            \"POST\",\n            JSON.stringify({\n                email : user,\n                password: pass\n            }),\n            {\n                'Content-Type' : 'application/json'\n            }\n        )\n        .then((response) => {\n            if(response.ok){\n                console.log(\"ss\");\n                loginSuccessfully(response.json())\n            }else{\n                document.getElementById(\"login-notification\").append(\"Authentication Failed !!\");\n            }\n            //return response.json();\n        })\n        .catch((error) => {\n            console.log(error);\n\n        });\n    }\n\n    \n    const onFocus = () => {\n        setPwClass(\"password\");\n    }\n\n    const onLostFocus = () => {\n        setPwClass(\"\");\n    }\n\n    return (\n        <div>\n            <div className={`owl`}>\n                <div className={`hand ${pwClass}`} ></div>\n                <div className={`hand hand-r ${pwClass}`}></div>\n                <div className={`arms ${pwClass}`}>\n                    <div className={`arm ${pwClass}`}></div>\n                    <div className={`arm arm-r ${pwClass}`}></div>\n                </div>\n            </div>\n            <div className=\"form\">\n                <div className=\"control\" >\n                    <label className=\"fa fa-envelope\"></label>\n                    <input style={{width : '100%'}} id=\"user\" placeholder=\"Email\" type=\"email\" onChange={(evt) => setUsername(evt.target.value)}></input>\n                </div>\n                <div className=\"control\">\n                    <label className=\"fa fa-lock\"></label>\n                    <input\n                        style={{width : '100%'}}\n                        id=\"pass\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        onFocus={() => onFocus()}\n                        onBlur={() => onLostFocus()}\n                        onChange={(evt) => setPassword(evt.target.value)}>\n                    </input>\n                </div>\n                <div>\n                    <Button id=\"login-button\" type=\"primary\" onClick={() => login()}>Login</Button>\n                    <p id=\"signup-text\">Not a member? <a href=\"#\">Sign up Here</a></p>\n                    <p className=\"login-bottom-text\">\n\n                        <a href=\"#\">Terms & Conditions</a> and\n                        <a href=\"#\"> Privacy Policy</a>\n                    </p>\n                    <ThemeSwitcher>\n\n                    </ThemeSwitcher>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react';\n\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\n\n\nconst SelectWithTyping = (props) => {\n\n    function onChange(value) {\n        console.log(`selected ${value}`);\n        props.callbackSelection(value);\n        //setSelectedValue(value);\n    }\n    \n    function onBlur() {\n        console.log('blur');\n    }\n    \n    function onFocus() {\n        console.log('focus');\n    }\n    \n    function onSearch(val) {\n        console.log('search:', val);\n    }\n\n    const renderOptions = () => {\n        const classes = props.options;\n        if(classes.length){\n            return classes.map((e)=>{\n                return <Option key={e[props.optionName]} value={e[props.optionName]}>{e[props.optionName]}</Option>\n            });\n        }\n        return null;\n    }\n\n    let optionElms = renderOptions();\n\n    // const [selectedValue, setSelectedValue] = useState();\n    \n    // useEffect(()=>{\n    //     if(props.value && props.value !== selectedValue){\n    //         setSelectedValue(props.value);\n    //     } \n    // },[props.value]);\n\n\n    \n    return(\n        <Select\n            showSearch\n            style={{ width: props.width || \"100%\" }}\n            placeholder={props.placeholder}\n            optionFilterProp=\"children\"\n            onChange={onChange}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            onSearch={onSearch}\n            filterOption={(input, option) =>\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n            disabled={props.disabled || false}\n            //value={selectedValue}\n        >\n            {optionElms}\n        </Select>\n    )\n}\n\nexport default SelectWithTyping;","import React, {useState} from 'react';\n\nimport { Button } from 'antd';\nimport { PoweroffOutlined } from '@ant-design/icons';\n\nconst ButtonWithLoading = (props) => {\n\n    // const [isLoading, setIsLoading] = useState(false);\n\n    // const enterLoading = index => {\n    //     props.onClick();\n    //     setIsLoading(true);\n    //     setTimeout(() => {\n    //         setIsLoading(false);\n    //     }, props.maxTimeLoading || 1000);\n    // };\n\n    return (\n        <Button type=\"primary\" loading={props.isLoading || false} onClick={props.onClick}>\n            Lookup\n        </Button>\n    );\n}\n\nexport default ButtonWithLoading;","import React, {useState} from 'react';\nimport { Input } from 'antd';\nimport SelectWithTyping from '../SelectWithTyping/SelectWithTyping';\nimport LocationVN from './LocationVN.json';\n\n\nconst LocationPicker = () => {\n\n    const [areaInSelectedCity, setAreaInSelectedCity] = useState([]);\n\n    const mapAreasToArray = (areas) => {\n        let result = [];\n        console.log(areas);\n        for (let area of Object.values(areas)) {\n            result.push({name : area})\n        }\n        return result;\n    }\n\n    const onSelectCity = (selectedCity) => {\n        for (let city of Object.values(LocationVN)) {\n            if(city.name === selectedCity) {\n                setAreaInSelectedCity(mapAreasToArray(city.cities));\n                return true;\n            }\n            \n        }\n    }\n\n    let cityOptions = [];\n    for (let city of Object.values(LocationVN)) {\n        cityOptions.push(city);\n    }\n\n    \n\n    return(\n        <div>\n        <Input placeholder=\"Details address\" style={{width : \"40%\"}}/>\n        \n        <SelectWithTyping \n            options={areaInSelectedCity} \n            optionName=\"name\" \n            optionKey=\"name\" \n            placeholder=\"District\"\n            callbackSelection={()=>{}}\n            width=\"30%\"\n            disabled={(areaInSelectedCity.length===0)}\n        />\n        <SelectWithTyping \n            options={cityOptions} \n            optionName=\"name\" \n            optionKey=\"name\" \n            placeholder=\"City\"\n            callbackSelection={onSelectCity}\n            width=\"30%\"\n            \n        />\n\n        </div>\n\n    );\n}\n\nexport default LocationPicker;","import React from 'react';\n\nimport { Input, Form } from 'antd';\n\nconst InputEmail = () => {\n    const validateMessages = {\n        required: '${label} is required!',\n        types: {\n          email: '${label} is not validate email!',\n          number: '${label} is not a validate number!',\n        },\n        number: {\n          range: '${label} must be between ${min} and ${max}',\n        },\n    };\n    \n    return(\n        <Form.Item name={['Email']}  rules={[{ type: 'email' }]} style={{marginBottom: \"0px\"}}>\n            <Input placeholder=\"Enter email address\"/>\n        </Form.Item>\n    )\n}\n\nexport default InputEmail;","import React, {useState} from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport SelectWithTyping from '../../Components/SelectWithTyping/SelectWithTyping';\nimport LocationPicker from '../LocationPicker/LocationPicker';\nimport InputEmail from '../Input-Email/InputEmail';\n\nconst { Option } = Select;\n\nconst AddNewStudent = (props) => {\n\n\n    const [visible, setVisible] = useState(false);\n\n    const showDrawer = () => {\n        setVisible(true);\n    };\n\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    const renderOptions = () => {\n        const classes = props.classData;\n        if(classes.length){\n            return classes.map((e)=>{\n                return <Option key={e[props.optionName]} value={e[props.optionName]}>{e[props.optionName]}</Option>\n            });\n        }\n        return null;\n    }\n\n    let optionClassElms = renderOptions();\n\n    return (\n      <>\n        <Button type=\"primary\" onClick={showDrawer} style={props.style} disabled={props.disabled} >\n          <PlusOutlined /> New student\n        </Button>\n        <Drawer\n          title=\"Create a new student\"\n          width={720}\n          onClose={onClose}\n          visible={visible}\n          bodyStyle={{ paddingBottom: 80 }}\n          footer={\n            <div\n              style={{\n                textAlign: 'right',\n              }}\n            >\n              <Button onClick={onClose} style={{ marginRight: 8 }}>\n                Cancel\n              </Button>\n              <Button onClick={onClose} type=\"primary\">\n                Submit\n              </Button>\n            </div>\n          }\n        >\n          <Form layout=\"vertical\" hideRequiredMark>\n            <Row gutter={16}>\n                <Col span={10}>\n                <Form.Item\n                    name=\"name\"\n                    label=\"Name\"\n                    rules={[{ required: true, message: 'Please enter user name' }]}\n                >\n                    <Input placeholder=\"Enter student's name\" />\n                </Form.Item>\n                </Col>\n                <Col span={6}>\n                <Form.Item\n                    name=\"gender\"\n                    label=\"Gender\"\n                    rules={[{ required: true, message: 'Please select an owner' }]}\n                    >\n                    <Select placeholder=\"Select gender\" style={{width: \"100%\"}}>\n                        <Option value=\"male\">Male</Option>\n                        <Option value=\"female\">Female</Option>\n                        <Option value=\"undefied\">Undefied</Option>\n                    </Select>\n                </Form.Item>\n                </Col>\n                <Col span={8}>\n                    <Form.Item\n                    name=\"dob\"\n                    label=\"Date of Birth\"\n                    rules={[{ required: true, message: 'Select birthday' }]}\n                    >\n                    <DatePicker\n                        style={{ width: '100%' }}\n                        getPopupContainer={trigger => trigger.parentNode}\n                        placeholder = \"Select birthday\"\n                    />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"email\"\n                        label=\"Email\"\n                        rules={[{ required: true, message: 'Please choose the approver' }]}\n                        >\n                        <InputEmail />\n                        \n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item\n                    name=\"class\"\n                    label=\"Class\"\n                    rules={[{ required: true, message: 'Email address' }]}\n                    >\n                        <SelectWithTyping \n                            options={props.classData} \n                            optionName=\"className\" \n                            optionKey=\"classID\" \n                            placeholder=\"Please choose the class\"\n                            callbackSelection={()=>{}}\n                        />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={16}>\n                <Col span={24}>\n                    <Form.Item\n                    name=\"address\"\n                    label=\"Address\"\n                    rules={[{ required: true, message: 'Please choose the dateTime' }]}\n                    >\n                    \n                    <LocationPicker />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={24}>\n                <Form.Item\n                  name=\"description\"\n                  label=\"Description\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please enter the description',\n                    },\n                  ]}\n                >\n                  <Input.TextArea rows={4} placeholder=\"Please enter the description\" />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Drawer>\n      </>\n    );\n\n}\n\nexport default AddNewStudent;","import React, {useState, useEffect} from 'react';\nimport { Modal, Button, Space, Descriptions, Badge, Progress, Row, Col } from 'antd';\n\nconst Statistic = (props) => {\n\n    const [statisticData, setStatisticData] = useState({});\n    const [modalVisible, setModalVisible] = useState(false);\n\n\n    useEffect(()=>{\n        if(props !== statisticData){ \n            setStatisticData(props);\n        }\n    },[props]);\n\n    const onOpenModal = (value) => {\n        setModalVisible(value);\n    }\n\n    const styleOfProgress = (colorCode) => {\n        console.log(colorCode);\n        return {\n            '0%': colorCode,\n            '100%': colorCode\n        }\n    }\n        \n\n    return (\n        <Space>\n            <Button type=\"primary\" onClick={() => onOpenModal(true)} disabled={props.disabled}>\n            Statistics\n            </Button>\n            <Modal\n            title=\"Statistic data\"\n            centered\n            visible={modalVisible}\n            onOk={() => setModalVisible(false)}\n            onCancel={() => setModalVisible(false)}\n            >\n            \n            <Descriptions layout=\"vertical\" bordered>\n                <Descriptions.Item label=\"Class\">{statisticData.pClassName}</Descriptions.Item>\n                <Descriptions.Item label=\"Subject\">{statisticData.pSubject}</Descriptions.Item>\n                <Descriptions.Item label=\"Semester\">HK2 - 2020</Descriptions.Item>\n                <Descriptions.Item label=\"Lecture\" span={1}>\n                    Mr. Nguyen Cong Hoan\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Status\" span={2}>\n                <Badge status=\"success\" text=\"Running\" />\n                </Descriptions.Item>\n                \n                <Descriptions.Item label=\"Statistic details\">\n                    \n                    <Row gutter={16}>\n                        <Col span={5}>Excellence</Col>\n                        <Col span={19}>\n                            <Progress percent={40} status=\"active\" strokeColor={{'0%': '#1890ff', '100%': '#1890ff'}}/>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={5}>Good</Col>\n                        <Col span={19}>\n                            <Progress percent={23} status=\"active\" strokeColor={{'0%': '#52c41a', '100%': '#52c41a'}}/>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={5}>Medium</Col>\n                        <Col span={19}>\n                            <Progress percent={57} status=\"active\" strokeColor={{'0%': '#ff4d4f', '100%': '#ff4d4f'}}/>\n                        </Col>\n                    </Row>\n                    \n                    \n                    \n                    \n                    \n                </Descriptions.Item>\n                </Descriptions>\n\n            </Modal>\n        </Space>\n    )\n}\n\nexport default Statistic;","import React from 'react';\nimport {useTranslation} from 'react-i18next';\n\nconst TextTranslation = ({textName, kClass}) => {\n    const {t} = useTranslation(); \n    return(      \n        <span className={kClass}>{t(textName)}</span>\n    );\n    \n}\n\nexport default TextTranslation;\n","import React, {useEffect, useState} from 'react';\nimport { Table, InputNumber } from 'antd';\nimport TextTranslation from '../TextTranslation/TextTranslation';\nimport ScoreCoefficient from '../../Containers/ClassDetails/SubjectCoefficient.json';\nimport './StudentScoresTable.css';\nimport { useSSR } from 'react-i18next';\nconst columns = [\n  {\n    title: \n        <div>\n            <TextTranslation textName=\"ClassInfo-Table-No.1\" kClass=\"pcview\"/>\n            <TextTranslation textName=\"ClassInfo-Table-No.2\" kClass=\"mbview\"/>\n        </div>,\n    dataIndex: 'studentID',\n    key: 'studentID',\n    width: 8,\n    fixed: 'left',\n    filters: [\n      {\n        text: 'Joe',\n        value: 'Joe',\n      },\n      {\n        text: 'John',\n        value: 'John',\n      },\n    ],\n        onFilter: (value, record) => record.name.indexOf(value) === 0,\n    },\n  \n    {\n        title: \n            <div>\n                <TextTranslation textName=\"ClassInfo-Table-Name.1\" kClass=\"pcview\"/>\n                <TextTranslation textName=\"ClassInfo-Table-Name.2\" kClass=\"mbview\"/>\n            </div>,\n        dataIndex: 'studentName',\n        key: 'studentName',\n        width: 35,\n        sorter: (a, b) => a.studentID - b.studentID,\n    },\n    {\n    title: \n        <div>\n            <TextTranslation textName=\"ClassInfo-Table-15mins.1\" kClass=\"pcview\"/>\n            <TextTranslation textName=\"ClassInfo-Table-15mins.2\" kClass=\"mbview\"/>\n        </div>,\n    dataIndex: 'k15mins',\n    key: 'k15mins',\n    width: 12,\n    },\n    {\n    title: \n        <div>\n            <TextTranslation textName=\"ClassInfo-Table-45mins.1\" kClass=\"pcview\"/>\n            <TextTranslation textName=\"ClassInfo-Table-45mins.2\" kClass=\"mbview\"/>\n        </div>,\n    dataIndex: 'k45mins',\n    key: 'k45mins',\n    width: 12,\n    },\n    {\n    title: \n        <div>\n            <TextTranslation textName=\"ClassInfo-Table-midterm.1\" kClass=\"pcview\"/>\n            <TextTranslation textName=\"ClassInfo-Table-midterm.2\" kClass=\"mbview\"/>\n        </div>,\n    dataIndex: 'kmidterm',\n    key: 'kmidterm',\n    width: 12,\n    },\n    {\n        title: \n            <div>\n                <TextTranslation textName=\"ClassInfo-Table-endterm.1\" kClass=\"pcview\"/>\n                <TextTranslation textName=\"ClassInfo-Table-endterm.2\" kClass=\"mbview\"/>\n            </div>,\n        dataIndex: 'kendterm',\n        key: 'kendterm',\n        width: 12,\n    }, \n    {\n        title: \n            <div>\n                <TextTranslation textName=\"ClassInfo-Table-final.1\" kClass=\"pcview\"/>\n                <TextTranslation textName=\"ClassInfo-Table-final.2\" kClass=\"mbview\"/>\n            </div>,\n        dataIndex: 'final',\n        key: 'final',\n        width: 12,\n    },     \n    \n];\n\n\n// for (let i = 0; i < 100; i++) {\n//   data.push({\n//     key: i,\n//     no: i,\n//     name: 'Nguyen Thi Quynh Ngan',\n//     age: i + 1,\n//     s15mins: '8.50',\n//     s45mins: '7.75',\n//     smidterm: '8.25',\n//     sendterm: '6.50',\n//     final: '7.74',\n//     action: 'Edit',\n//   });\n// }\n\n\nconst calculateFinalScore = (e) => {\n    \n    let coef = ScoreCoefficient;\n    return e.k15mins*coef.k15mins + e.k45mins*coef.k45mins \n        + e.kmidterm*coef.kmidterm + e.kmidterm*coef.kmidterm;\n}\n\nconst StudentScoresTable = (props) => {\n    \n    const [classDetailsData, setClassDetailsData] = useState([{}]);\n    const [tableData, setTableData] = useState([]);\n    const [tableEditable, setTableEditable] = useState(false);\n    \n    useEffect(()=>{\n        if(props.tableEditable !== tableEditable){\n            setTableEditable(props.tableEditable);\n        }\n    });\n\n    const renderClassDetailsData = () => {\n        setTableData([]);\n        let data = []; // clear data\n        let i=0;\n\n        console.log(classDetailsData);\n\n        if(classDetailsData){\n            for(let e of classDetailsData){\n                \n                //e[\"key\"] = i;\n                e[\"final\"] = calculateFinalScore(e);\n                /*e[\"final\"] = (\n                <Input\n                    disabled={true}\n                    value={calculateFinalScore(e)}\n                    placeholder=\"Input a number\"\n                    maxLength={25}\n                />);*/\n\n                let a = {};\n                Object.keys(e).forEach((key)=>{ \n                    a[key] = (key === 'k15mins' || key === 'k45mins' || key === 'kmidterm' || key === 'kendterm' || key === 'final' ) ? \n                    <InputNumber\n                            style={{width: \"100%\"}}\n                            min={1} max={10}\n                            disabled={!tableEditable}\n                            defaultValue={e[key]}\n                             \n                        /> : e[key]\n                    a[\"key\"] = i;\n                });\n                data.push(a);\n                i++;\n            }\n        }\n        setTableData(data);\n        \n    }\n\n    \n\n    \n    useEffect(()=>{\n\n        if(props.classDetailsData !== classDetailsData) setClassDetailsData(props.classDetailsData || []);\n       \n    },[props.classDetailsData]);\n\n    useEffect(()=>{\n        renderClassDetailsData();\n    },[classDetailsData, tableEditable]);\n\n    \n    return (\n        <Table loading={props.isLoading || false}\n            columns={columns}\n            dataSource={tableData}\n            bordered\n            size=\"middle\"\n            scroll={{ x: 'calc(500px + 50%)', y: 240 }}\n            expandable={true}\n        />\n    )\n}\n\nexport default StudentScoresTable;","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport SelectWithTyping from '../../Components/SelectWithTyping/SelectWithTyping';\nimport SubmitWithLoading from '../../Components/ButtonWithLoading/ButtonWithLoading';\nimport AddNewStudent from '../../Components/AddNewStudent/AddNewStudent';\nimport StatisticScore from '../../Components/Statistic/Statistic';\n\n\nimport { Card, Col, Row, message, Space, Collapse, Button } from 'antd';\nimport { CaretRightOutlined } from '@ant-design/icons';\n\nimport Subjectslist from './SubjectsList.json';\nimport StudentScoreTable from '../../Components/StudentScoresTable/StudentScoresTable';\n\nimport { useHttpClient } from '../../Hooks/http-hook';\nimport {useHistory} from 'react-router-dom';\n\nconst ClassDetails = (props) => {\n    console.log(props.match.params.classCode);\n\n    console.log(props);\n\n    const [selectedClass, setSelectedClass] = useState();\n    \n    const [selectedSubject, setSelectedSubject] = useState();\n\n    const { sendRequest } = useHttpClient();\n\n    const { Panel } = Collapse;\n\n    // Fetch data\n    const [selectedClassDetailsData, setSelectedClassDetailsData] = useState();\n    const [isFetchingClassDetailsData, setIsFetchingClassDetailsData] = useState(false);\n\n    const [tableEditable, setTableEditable] = useState(false);\n\n    // Redirect \n    const rHistory = useHistory();\n\n    const onSelectClass = (kClass) => {\n        console.log(\"kClass\" + kClass);\n        setSelectedClass(kClass);\n        //rHistory.push(`/class/${selectedClass}`);\n    }\n\n\n    console.log(selectedClass);\n    console.log(selectedSubject);\n\n    const sleeper = (ms) => {\n        return function(x) {\n          return new Promise(resolve => setTimeout(() => resolve(x), ms));\n        };\n    }\n\n    \n    useEffect(()=>{\n\n    },[]);\n\n    const fetchClassDetailsData = () => {\n        setIsFetchingClassDetailsData(true);\n\n        sendRequest(`https://api.kunbr0.com/se104/subjects/${selectedClass}/${selectedSubject}.php`)\n            .then((response) => {\n                return response.json();\n            })\n\n            .then(sleeper(500))\n\n            .then((students) => {\n                setSelectedClassDetailsData(students);\n                setIsFetchingClassDetailsData(false);\n                message.success(`${selectedSubject} data of ${selectedClass} loaded successfully !`);\n            })\n            \n            .catch((error) => {\n                console.log(error);\n                message.error(`Cannot get ${selectedSubject} data of ${selectedClass} !`);\n                setSelectedClassDetailsData([])\n                setIsFetchingClassDetailsData(false);\n            });\n    }\n\n    return (\n\n        <div className=\"site-card-wrapper\">\n            <Collapse\n                bordered={false}\n                defaultActiveKey={['1']}\n                expandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\n                className=\"site-collapse-custom-collapse\"\n                style={{marginBottom : \"10px\"}}\n            >\n                <Panel header=\"Class data selection\" key=\"1\" className=\"site-collapse-custom-panel\">\n                <Row gutter={16}>\n                <Col span={8}>\n                    <Card loading={props.classData.classData.length > 0 ? false : true} size={300} title=\"Classes\" bordered={false}>\n                        <SelectWithTyping \n                            value={props.match.params.classCode} \n                            callbackSelection={setSelectedClass} \n                            options={props.classData.classData} \n                            optionName=\"className\" optionKey=\"classID\" \n                            placeholder=\"Select class\"\n                            disabled={isFetchingClassDetailsData}/>\n                    </Card>\n                </Col>\n                <Col span={8}>\n                    <Card loading={props.classData.classData.length > 0 ? false : true} title=\"Subjects\" bordered={false}>\n                        <SelectWithTyping \n                            callbackSelection={setSelectedSubject} \n                            options={Subjectslist} \n                            optionName=\"subjectName\" optionKey=\"sid\" \n                            placeholder=\"Select subject\"\n                            disabled={isFetchingClassDetailsData}/>\n                    </Card>\n                </Col>\n                <Col span={8}>\n                    <Card loading={isFetchingClassDetailsData} title=\"Classinfo\" bordered={false}>\n                        <Space direction=\"vertical\">\n                            <Space>Lecture : Le Thi Van a</Space>\n                            <Space>Enrolled Student  : 46</Space>\n                            \n                        </Space>\n                    </Card>\n                </Col>\n                </Row>\n                <SubmitWithLoading isLoading={isFetchingClassDetailsData} onClick={fetchClassDetailsData} maxTimeLoading={1000} />\n                <AddNewStudent disabled={isFetchingClassDetailsData} classData={props.classData.classData} style={{marginLeft : \"5px\", marginRight : \"5px\", backgroundColor : \"#52c41a\", borderColor: \"#52c41a\"}} />\n                <StatisticScore \n                    pClassName={selectedClass} \n                    pSubject={selectedSubject}\n                    disabled={!selectedClassDetailsData}\n                    />\n                <Button type=\"primary\" danger={tableEditable} onClick={()=>setTableEditable(!tableEditable)}>\n                    {!tableEditable ? \"Edit\":\"Save\"} \n                </Button>\n                </Panel>\n            </Collapse>\n            <StudentScoreTable tableEditable={tableEditable} classDetailsData={selectedClassDetailsData} isLoading={isFetchingClassDetailsData} />\n        </div>\n    );\n}\n\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        classData : state.classData\n    };\n}\n\n\nexport default connect(mapStateToProps)(ClassDetails);\n","import React , {useState, useEffect} from 'react';\nimport { Calendar, Alert, Badge, Card } from 'antd';\nimport moment from 'moment';\nimport 'antd/dist/antd.css';\nimport './BigCalendar.css';\n\nconst BigCalendar = ({width = 95}) => {\n\n    // First loading\n    const [isLoading, setIsLoading] = useState(true);\n    useEffect(()=>{\n        setTimeout(()=>{\n            setIsLoading(false);\n        }, 1000);\n    });\n\n    const [value, setValue] = useState();\n    const [selectedValue, setSelectedValue] = useState(moment);\n  \n    const onSelect = value => {\n        setValue(value);\n        setSelectedValue(value);\n      \n    };\n  \n    const onPanelChange = value => \n    {\n        setValue(value);\n    };\n  \n    \n  \n    //const { value, selectedValue } = this.state;\n    return (\n        <div id=\"big-calendar-wrapper\" style={{width : `${width}%`, margin: 25}}>\n        <Alert\n        message={`You selected date: ${selectedValue && selectedValue.format('YYYY-MM-DD')}`}\n        />\n        <Card loading={isLoading}>\n            <Calendar fullscreen={true} style={{padding: 25}} dateCellRender={dateCellRender} monthCellRender={monthCellRender} value={value} onSelect={onSelect} onPanelChange={onPanelChange} />\n        </Card>\n            \n        </div>\n    );\n  }\n  \n  function getListData(value) {\n    let listData;\n    switch (value.date()) {\n      case 8:\n        listData = [\n          { type: 'warning', content: 'Đồ án quan trọng.' },\n          { type: 'success', content: 'Đi chơi.' },\n        ];\n        break;\n      case 10:\n        listData = [\n          { type: 'warning', content: 'Đồ án quan trọng.' },\n          { type: 'success', content: 'Đi chơi.' },\n          { type: 'error', content: 'This is error event.' },\n        ];\n        break;\n      case 15:\n        listData = [\n          { type: 'warning', content: 'Đồ án quan trọng' },\n          { type: 'success', content: 'This is very long usual event。。....' },\n          { type: 'error', content: 'This is error event 1.' },\n          { type: 'error', content: 'This is error event 2.' },\n          { type: 'error', content: 'This is error event 3.' },\n          { type: 'error', content: 'This is error event 4.' },\n        ];\n        break;\n      default:\n    }\n    return listData || [];\n  }\n  \n  function dateCellRender(value) {\n    const listData = getListData(value);\n    return (\n      <ul className=\"events\">\n        {listData.map(item => (\n          <li key={item.content}>\n            <Badge status={item.type} text={item.content} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  \n  function getMonthData(value) {\n    if (value.month() === 8) {\n      return 1394;\n    }\n  }\n  \n  function monthCellRender(value) {\n    const num = getMonthData(value);\n    return num ? (\n      <div className=\"notes-month\">\n        <section>{num}</section>\n        <span>Even tháng</span>\n      </div>\n    ) : null;\n  }\n\n\n  export default BigCalendar;","import React from 'react';\nimport Calendar from '../../Components/BigCalendar/BigCalendar';\n\nconst Schedule = () => {\n    return <Calendar />\n};\n\nexport default Schedule;","import React from 'react';\nimport { Descriptions } from 'antd';\n\nconst Profile = () => {\n    return(\n        <Descriptions title=\"User Info\" layout=\"vertical\">\n            <Descriptions.Item label=\"UserName\">kunbr0</Descriptions.Item>\n            <Descriptions.Item label=\"Telephone\">1800 1234</Descriptions.Item>\n            <Descriptions.Item label=\"Live\">Phu Yen, VietNam</Descriptions.Item>\n            <Descriptions.Item label=\"Address\" span={1}>\n            No. 18, LVC, Hangzhou, Zhejiang, China\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Remark\">Nong Dan</Descriptions.Item>\n        </Descriptions>\n    );\n}\n\nexport default Profile;","import React, {lazy} from 'react';\n//import SLogin from './../Sites/Login/Login';\nimport SHomepage from '../Containers/Pages/Homepage/Homepage';\n// import SNotFound from './../Sites/NotFound_404/NotFound_404';\n//import ClassInfo from './../Sites/Class/ClassInfo';\n// import History from './../Sites/History/History';\nimport SSystem from '../Containers/System/System';\n//import Login from '../Sites/Login/Login';\nimport TestLogin from '../Containers/Pages/TestLogin/TestLogin'\nimport ClassDetails from '../Containers/ClassDetails/ClassDetails';\nimport Schedule from '../Containers/Schedule/Schedule';\nimport Profile from '../Containers/Profile/Profile';\n\n\nconst routes = [\n    {\n        path : '/',\n        exact : true,\n        main : () => <SHomepage />\n    },\n    {\n        path : '/system',\n        exact : false,\n        main : () => <SSystem />\n    },\n    {\n        path : '/users',\n        exact : false,\n        main : () => <TestLogin />\n    },\n    {\n        path : '/class/:classCode',\n        exact : false,\n        main : ({match}) => <ClassDetails match={match} />\n    },\n    {\n        path : '/schedule',\n        exact : false,\n        main : () => <Schedule />\n    },\n    {\n        path : '/profile',\n        exact : false,\n        main : () => <Profile />\n    },\n];\n\nexport default routes;","import styled from \"styled-components\";\nimport bgImage from \"../../../Assets/img/bg.png\"\n\nconst SetupPageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 10vh;\n  height: 100vh;\n  background-image: url(\"${bgImage}\");\n  background-size: cover;\n  \n  .setup-container {\n      width: 850px;\n      height: 460px;   \n      display: flex;   \n      border-radius: 16px;\n      box-shadow: 2px 2px 10px #3d457a;\n      background: none;\n      \n      .left-side {\n        background: #677EBE;\n        min-width: 230px;\n        border-radius: 16px 0 0 16px;\n        padding: 0px 15px;\n        display: flex;\n        flex-flow: column;\n        position: relative;\n        \n        .header {\n          height: 75px;\n          min-height: 75px;\n        }\n        \n        .content {\n          height: 100%;\n          color: white;\n          z-index: 10;\n          display: flex;\n          justify-content: center;\n          padding-left: 10px;\n          \n          .ant-steps-item-description {\n            color: rgba(255, 255, 255, 0.65);\n          }\n          \n          .ant-steps-item-title {          \n            color: rgba(255, 255, 255, 0.85);\n          }\n          \n          .ant-steps-item-process {\n            .ant-steps-item-description {\n              color: rgba(255, 255, 255, 0.85);            \n            }\n            \n            .ant-steps-item-title {\n              color: rgba(255, 255, 255, 1);            \n            }\n            \n            .ant-steps-item-icon {\n              background: #5BDEC6;\n              border-color: #5BDEC6;            \n            }\n          }\n          \n          .ant-steps-item-finish {\n            .ant-steps-item-icon {\n              border-color: #5BDEC6;          \n            }\n            \n            .ant-steps-icon {\n              color: #5abfa7;\n            }\n            \n            .ant-steps-item-tail {\n              &::after {\n                background: #5BDEC6;\n              }\n            }\n          }\n        }\n        \n        .footer {\n          display: flex;\n          justify-content: center;\n          color: #cadbde;\n        }   \n          \n        .particle {\n          position: absolute;\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          \n          canvas {\n            border-radius: 16px 0 0 16px;\n          }\n        }\n      }\n      \n      .right-side {\n        display: flex;\n        flex-flow: column;\n        width: 100%;\n        height: 100%;\n        padding: 5px 5px 5px 10px;\n        background: #fff;\n        border-radius: 0 16px 16px 0;\n        \n        .title {\n          margin-bottom: 0;\n          width: 100%;\n          border-bottom: 1px solid #bababa;\n          color: #677FBD;\n        }\n      }\n  }\n`;\n\nexport default SetupPageWrapper;\n\nexport const StepWrapper = styled.div`  \n  width: 100%;\n  height: 100%;\n  padding-top: 5px;\n  overflow: hidden auto;\n`;","import styled from \"styled-components\";\n\nconst DatabaseWrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-flow: column;\n  padding-right: 5px;\n  padding-bottom: 5px;\n  \n  .page-container {  \n    height: 100%;\n    display: flex;\n    flex-flow: column;\n    overflow: hidden auto;\n    \n    .st-form {\n      display: flex;\n      flex-flow: column;\n      justify-content: flex-start;\n      align-items: flex-start;\n      height: 100%;\n      margin-top: 5px;\n      \n      .db-selector {\n        width: 170px;\n      }\n      \n      th {\n        padding: 3px 0px 3px 15px;\n        text-align: left;\n      }\n      \n      .st-label {\n        min-width: 120px;\n        font-weight: 500;\n      }\n      \n      .st-input {\n        max-width: 200px;\n      }\n       \n      .st-description {\n        font-weight: normal;\n        font-size: 12px;\n      }\n    }\n  }\n  \n  .st-controller {\n    margin-top: 20px;\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n    padding-right: 20px;\n  }\n`;\n\nexport default DatabaseWrapper;","import React, {useEffect, useState} from \"react\";\nimport DatabaseWrapper from \"./style\";\nimport {Button, Select} from \"antd\";\nimport MsSQL from './Form/mssql'\nimport MySQL from './Form/mysql'\nimport Sqlite from './Form/sqlite'\n\nconst {Option} = Select;\nconst sqls = {\n    MYSQL: MySQL,\n    MSSQL: MsSQL,\n    SQLITE: Sqlite\n}\n\nexport default function (props) {\n    const [sql, setSQL] = useState(\"MYSQL\");\n    const [error, setError] = useState(0);\n    const [data, setData] = useState();\n\n    const SqlForm = sqls[sql];\n\n    useEffect(() => {\n        setData({});\n    }, [sql])\n\n    const onSubmit = () => {\n        if (!data || !data.db_name || !data.password || (data.db_server !== 'SQLITE' && !data.username)) {\n            setError(1);\n            return;\n        }\n\n        props.onNext(props.step + 1);\n    }\n\n    return (\n        <DatabaseWrapper>\n            <div className=\"page-container\">\n                <label>\n                    Below you should enter your connection details. If you're not sure about these, contact your system admin.\n                </label>\n                <div className=\"st-form\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <th>\n                                    <label>Database server</label>\n                                </th>\n                                <th className=\"st-input\">\n                                    <Select className=\"db-selector\" defaultValue=\"MYSQL\" onChange={(value) => setSQL(value)}>\n                                        <Option value=\"MYSQL\">MySQL</Option>\n                                        <Option value=\"MSSQL\">SQL Server</Option>\n                                        <Option value=\"SQLITE\">Sqlite</Option>\n                                    </Select>\n                                </th>\n                                <th>\n                                </th>\n                            </tr>\n                            <SqlForm onChange={(value) => setData(value)}/>\n                        </tbody>\n                    </table>\n                    <div className=\"st-controller\">\n                        <Button onClick={onSubmit}>Submit</Button>\n                    </div>\n                </div>\n            </div>\n        </DatabaseWrapper>\n    )\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Input, InputNumber} from \"antd\";\n\nexport default function (props) {\n    const [db, setDB] = useState();\n    const [user, setUser] = useState();\n    const [pass, setPass] = useState();\n    const [host, setHost] = useState(\"localhost\");\n    const [port, setPort] = useState(3306);\n    const [prefix, setPrefix] = useState(\"qlhs_\");\n\n    useEffect(() => {\n        if (props.onChange) {\n            props.onChange({\n                db_server: \"MYSQL\",\n                db_name: db,\n                username: user,\n                password: pass,\n                hostname: host,\n                port: port,\n                tb_prefix: prefix\n            });\n        }\n    }, [db, user, pass, host, port, prefix])\n\n    return (\n        <>\n            <tr>\n                <th className=\"st-label\">\n                    Database\n                </th>\n                <th className=\"st-input\">\n                    <Input onChange={(evt) => setDB(evt.target.value)} value={db}/>\n                </th>\n                <th className=\"st-description\">\n                    The name of the database you want to use with QLHS.\n                </th>\n            </tr>\n            <tr>\n                <th className=\"st-label\">\n                    Username\n                </th>\n                <th className=\"st-input\">\n                    <Input onChange={(evt) => setUser(evt.target.value)} value={user}/>\n                </th>\n                <th className=\"st-description\">\n                    Your database username.\n                </th>\n            </tr>\n            <tr>\n                <th className=\"st-label\">\n                    Password\n                </th>\n                <th className=\"st-input\">\n                    <Input.Password onChange={(evt) => setPass(evt.target.value)} value={pass}/>\n                </th>\n                <th className=\"st-description\">\n                    Your database password.\n                </th>\n            </tr>\n            <tr>\n                <th className=\"st-label\">\n                    Hostname\n                </th>\n                <th className=\"st-input\">\n                    <Input onChange={(evt) => setHost(evt.target.value)} value={host}/>\n                </th>\n                <th className=\"st-description\">\n                    You should be able to get this info from your system administrator, if localhost doesn't work.\n                </th>\n            </tr>\n            <tr>\n                <th className=\"st-label\">\n                    Port\n                </th>\n                <th className=\"st-input\">\n                    <InputNumber onChange={(value) => setPort(value)} defaultValue={port}/>\n                </th>\n                <th className=\"st-description\">\n                    If you want to use custom port for your MySQL server, change this.\n                </th>\n            </tr>\n            <tr>\n                <th className=\"st-label\">\n                    Table prefix\n                </th>\n                <th className=\"st-input\">\n                    <Input onChange={(evt) => setPrefix(evt.target.value)} value={prefix}/>\n                </th>\n                <th className=\"st-description\">\n                    If you want to run multiple QLHS installation in a single database, change this.\n                </th>\n            </tr>\n        </>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {Input, InputNumber} from \"antd\";\n\nexport default function (props) {\n    const [db, setDB] = useState();\n    const [user, setUser] = useState();\n    const [pass, setPass] = useState();\n    const [host, setHost] = useState(\"localhost\");\n    const [port, setPort] = useState(1433);\n    const [prefix, setPrefix] = useState(\"qlhs_\");\n\n    useEffect(() => {\n        if (props.onChange) {\n            props.onChange({\n                db_server: \"MSSQL\",\n                db_name: db,\n                username: user,\n                password: pass,\n                hostname: host,\n                port: port,\n                tb_prefix: prefix\n            });\n        }\n    }, [db, user, pass, host, port, prefix])\n\n    return (\n        <>\n            <tr>\n                <th className=\"st-label\">\n                    Database\n                </th>\n                <th className=\"st-input\">\n                    <Input onChange={(evt) => setDB(evt.target.value)} value={db}/>\n                </th>\n                <th className=\"st-description\">\n                    The name of the database you want to use with QLHS.\n                </th>\n            </tr>\n            <tr>\n                <th className=\"st-label\">\n                    Username\n                </th>\n                <th className=\"st-input\">\n                    <Input onChange={(evt) => setUser(evt.target.value)} value={user}/>\n                </th>\n                <th className=\"st-description\">\n                    Your database username.\n                </th>\n            </tr>\n            <tr>\n                <th className=\"st-label\">\n                    Password\n                </th>\n                <th className=\"st-input\">\n                    <Input.Password onChange={(evt) => setPass(evt.target.value)} value={pass}/>\n                </th>\n                <th className=\"st-description\">\n                    Your database password.\n                </th>\n            </tr>\n            <tr>\n                <th className=\"st-label\">\n                    Hostname\n                </th>\n                <th className=\"st-input\">\n                    <Input onChange={(evt) => setHost(evt.target.value)} value={host}/>\n                </th>\n                <th className=\"st-description\">\n                    You should be able to get this info from your system administrator, if localhost doesn't work.\n                </th>\n            </tr>\n            <tr>\n                <th className=\"st-label\">\n                    Port\n                </th>\n                <th className=\"st-input\">\n                    <InputNumber onChange={(value) => setPort(value)} defaultValue={port}/>\n                </th>\n                <th className=\"st-description\">\n                    If you want to use custom port for your SQL Server, change this.\n                </th>\n            </tr>\n            <tr>\n                <th className=\"st-label\">\n                    Table prefix\n                </th>\n                <th className=\"st-input\">\n                    <Input onChange={(evt) => setPrefix(evt.target.value)} value={prefix}/>\n                </th>\n                <th className=\"st-description\">\n                    If you want to run multiple QLHS installation in a single database, change this.\n                </th>\n            </tr>\n        </>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {Input} from \"antd\";\n\nexport default function (props) {\n    const [db, setDB] = useState();\n    const [pass, setPass] = useState();\n    const [prefix, setPrefix] = useState(\"qlhs_\");\n\n    useEffect(() => {\n        if (props.onChange) {\n            props.onChange({\n                db_server: \"SQLITE\",\n                db_name: db,\n                password: pass,\n                tb_prefix: prefix\n            });\n        }\n    }, [db, pass, prefix])\n\n    return (\n        <>\n            <tr>\n                <th className=\"st-label\">\n                    Database\n                </th>\n                <th className=\"st-input\">\n                    <Input onChange={(evt) => setDB(evt.target.value)} value={db}/>\n                </th>\n                <th className=\"st-description\">\n                    The name of the database you want to use with QLHS.\n                </th>\n            </tr>\n            <tr>\n                <th className=\"st-label\">\n                    Password\n                </th>\n                <th className=\"st-input\">\n                    <Input.Password onChange={(evt) => setPass(evt.target.value)} value={pass}/>\n                </th>\n                <th className=\"st-description\">\n                    Your database password.\n                </th>\n            </tr>\n            <tr>\n                <th className=\"st-label\">\n                    Table prefix\n                </th>\n                <th className=\"st-input\">\n                    <Input onChange={(evt) => setPrefix(evt.target.value)} value={prefix}/>\n                </th>\n                <th className=\"st-description\">\n                    If you want to run multiple QLHS installation in a single database, change this.\n                </th>\n            </tr>\n        </>\n    )\n}","import styled from \"styled-components\";\n\nconst InformationWrapper = styled.div`\n  \n  .st-input-info {\n    width: 250px;\n  }\n  \n  .st-form {\n    margin-top: 20px !important;\n  }\n`;\n\nexport default InformationWrapper;","import styled from \"styled-components\";\n\nconst FinishWrapper = styled.div`\n  \n  .st-input-info {\n    width: 250px;\n  }\n  \n  .st-form {\n    margin-top: 20px !important;\n  }\n  \n  .st-controller-finish {\n    margin-top: 30px;\n    padding: 0px 15px;\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n  }\n`;\n\nexport default FinishWrapper;","import styled from \"styled-components\";\n\nconst SystemWrapper = styled.div`\n  \n  .st-input-info {\n    width: 250px;\n  }\n  \n  .st-form {\n    margin-top: 20px !important;\n  }\n`;\n\nexport default SystemWrapper;","import styled from 'styled-components'\n\nconst LoaderWrapper = styled.div`  \n  width: 850px;\n  height: 460px;   \n  display: flex;   \n  border-radius: 16px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default LoaderWrapper;\n","import React from 'react';\nimport LoaderWrapper from \"./style\";\nimport * as legoAnimation from \"../../../Assets/lotties/410-lego-loader\";\nimport * as doneAnimation from \"../../../Assets/lotties/433-checked-done\";\nimport FadeIn from \"react-fade-in\";\nimport Lottie from \"react-lottie\";\n\n\nconst legoConfig = {\n    loop: true,\n    autoplay: true,\n    animationData: legoAnimation.default,\n    rendererSettings: {\n        preserveAspectRatio: \"xMidYMid slice\"\n    }\n}\nconst successConfig = {\n    loop: true,\n    autoplay: true,\n    animationData: doneAnimation.default,\n    rendererSettings: {\n        preserveAspectRatio: \"xMidYMid slice\"\n    }\n}\n\nexport default function (props) {\n    return (\n        <LoaderWrapper>\n            <FadeIn>\n                <Lottie options={props.done ? successConfig : legoConfig} height={400} width={400} />\n            </FadeIn>\n        </LoaderWrapper>\n    )\n}","const ParticleConfig = {\n    \"particles\": {\n        \"number\": {\n            \"value\": 80,\n            \"density\": {\n                \"enable\": false\n            }\n        },\n        \"size\": {\n            \"value\": 3,\n            \"random\": true,\n            \"anim\": {\n                \"speed\": 4,\n                \"size_min\": 0.3\n            }\n        },\n        \"line_linked\": {\n            \"enable\": false\n        },\n        \"move\": {\n            \"random\": true,\n            \"speed\": 1,\n            \"direction\": \"top\",\n            \"out_mode\": \"out\"\n        },\n        \"color\": \"#d1e2ff\"\n    },\n    \"interactivity\": {\n        \"events\": {\n            \"onhover\": {\n                \"enable\": false,\n                \"mode\": \"bubble\"\n            },\n            \"onclick\": {\n                \"enable\": false,\n                \"mode\": \"repulse\"\n            }\n        },\n        \"modes\": {\n            \"bubble\": {\n                \"distance\": 250,\n                \"duration\": 2,\n                \"size\": 0,\n                \"opacity\": 0\n            },\n            \"repulse\": {\n                \"distance\": 400,\n                \"duration\": 4\n            }\n        }\n    }\n}\n\nexport default ParticleConfig;","import React, {useEffect, useState} from \"react\";\nimport SetupPageWrapper, {StepWrapper} from \"./styles\";\nimport DBStep from '../../../Components/Setup/Database';\nimport InfoStep from '../../../Components/Setup/Information';\nimport FinalStep from '../../../Components/Setup/Finish';\nimport SystemStep from '../../../Components/Setup/System';\nimport Loader from '../../../Components/Setup/Loader';\nimport {Steps} from \"antd\";\nimport ParticleConfig from \"./config\";\nimport Particles from \"react-particles-js\";\nimport Helmet from \"react-helmet\";\nimport FadeIn from \"react-fade-in\";\nimport agent from \"../../../Utilities/agent\";\n\nconst { Step } = Steps;\n\nexport default function SetupPage(props) {\n    const [current, setCurrent] = useState(0);\n    const [loadProgress, setLoadProgress] = useState(0);\n    const CurrentStep = steps[current].component;\n\n    useEffect(() => {\n        // agent.Setup.status().then(res => {\n        //     if (res && res.error == 0) {\n        //         setCurrent(res.data);\n        //         setLoadProgress(1);\n        //         setTimeout(() => {\n        //             setLoadProgress(2);\n        //         }, 500);\n        //     }\n        // });\n        setTimeout(() => {\n            setLoadProgress(1);\n            setTimeout(() => {\n                setLoadProgress(2);\n            }, 500);\n        }, 1500);\n\n    }, [])\n\n    return (\n        <SetupPageWrapper>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>{`QLHS - ${steps[current].title}`}</title>\n            </Helmet>\n            {loadProgress >= 2 ? (\n                <FadeIn>\n                    <div className=\"setup-container\">\n                        <div className=\"left-side\">\n                            <div className=\"header\">\n                            </div>\n                            <div className=\"content\">\n                                <Steps direction=\"vertical\" current={current}>\n                                    {steps.map((step, index) => (\n                                        <Step key={index} title={step.name} description={step.description} />\n                                    ))}\n                                </Steps>\n                            </div>\n                            <div className=\"footer\">\n                                <span>T9 Team ©2020</span>\n                            </div>\n                            <Particles params={ParticleConfig} className=\"particle\"/>\n                        </div>\n                        <div className=\"right-side\">\n                            <h1 className=\"title\">{steps[current].title}</h1>\n                            <StepWrapper>\n                                <CurrentStep step={current} onNext={(value) => setCurrent(value)}/>\n                            </StepWrapper>\n                        </div>\n                    </div>\n                </FadeIn>\n            ) : (\n                <Loader done={loadProgress == 1}/>\n            )}\n        </SetupPageWrapper>\n    )\n}\n\nconst steps = [\n    {\n        name: \"Database\",\n        title: \"Database Setup\",\n        component: DBStep,\n        description: \"Database setup\"\n    },\n    // {\n    //     name: \"System\",\n    //     title: \"System Information\",\n    //     component: SystemStep,\n    //     description: \"System config\"\n    // },\n    {\n        name: \"Information\",\n        title: \"Information needed\",\n        component: InfoStep,\n        description: \"Admin information setup\"\n    },\n    {\n        name: \"Finish\",\n        title: \"Finish\",\n        component: FinalStep,\n        description: null\n    }\n];","import React, {useState} from \"react\";\nimport {Button, Input} from \"antd\";\nimport DatabaseWrapper from \"../Database/style\";\nimport InformationWrapper from \"./style\";\nimport FadeIn from \"react-fade-in\";\n\nexport default function (props) {\n    const [error, setError] = useState(0);\n    const [name, setName] = useState();\n    const [username, setUsername] = useState();\n    const [password, setPassword] = useState();\n    const [email, setEmail] = useState();\n\n    const onSubmit = () => {\n        if (!name || !username || !password || !email) {\n            setError(1);\n            return;\n        }\n\n        props.onNext(props.step + 1);\n    }\n\n    return (\n        <DatabaseWrapper>\n            <FadeIn>\n                <InformationWrapper className=\"page-container\">\n                    <label>\n                        Please provide the following information. Don't worry, you can always change these settings later.\n                    </label>\n                    <div className=\"st-form\">\n                        <table>\n                            <tbody>\n                            <tr>\n                                <th className=\"st-label\">\n                                    Your name\n                                </th>\n                                <th className=\"st-input-info\">\n                                    <Input value={name} onChange={(evt) => setName(evt.target.value)} />\n                                </th>\n                                <th className=\"st-description\">\n                                    Your full name.\n                                </th>\n                            </tr>\n                            <tr>\n                                <th className=\"st-label\">\n                                    Username\n                                </th>\n                                <th className=\"st-input-info\">\n                                    <Input value={username} onChange={(evt) => setUsername(evt.target.value)} />\n                                </th>\n                                <th className=\"st-description\">\n                                    Your login username.\n                                </th>\n                            </tr>\n                            <tr>\n                                <th className=\"st-label\">\n                                    Password\n                                </th>\n                                <th className=\"st-input-info\">\n                                    <Input.Password value={password} onChange={(evt) => setPassword(evt.target.value)} />\n                                </th>\n                                <th className=\"st-description\">\n                                    <b>Important:</b> You will need this password to login. Please store it in the secure location.\n                                </th>\n                            </tr>\n                            <tr>\n                                <th className=\"st-label\">\n                                    Your email\n                                </th>\n                                <th className=\"st-input-info\">\n                                    <Input value={email} onChange={(evt) => setEmail(evt.target.value)} />\n                                </th>\n                                <th className=\"st-description\">\n                                    Please check your email address before continuing.\n                                </th>\n                            </tr>\n                            </tbody>\n                        </table>\n                        <div className=\"st-controller\">\n                            <Button onClick={onSubmit}>Submit</Button>\n                        </div>\n                    </div>\n                </InformationWrapper>\n            </FadeIn>\n        </DatabaseWrapper>\n    )\n}\n","import React, {useState} from \"react\";\nimport {Button, Input} from \"antd\";\nimport DatabaseWrapper from \"../Database/style\";\nimport FinishWrapper from \"./style\";\nimport FadeIn from \"react-fade-in\";\n\nexport default function (props) {\n    const [error, setError] = useState(0);\n    const [username, setUsername] = useState();\n    const [password, setPassword] = useState();\n\n    const onSubmit = () => {\n\n    }\n\n    return (\n        <DatabaseWrapper>\n            <FadeIn>\n                <FinishWrapper className=\"page-container\">\n                    <label>\n                        This is small tool to check your login information. Just enter your username and password to the form then click Check button.\n                    </label>\n                    <div className=\"st-form\">\n                        <table>\n                            <tbody>\n                            <tr>\n                                <th className=\"st-label\">\n                                    Username\n                                </th>\n                                <th className=\"st-input-info\">\n                                    <Input value={username} onChange={(evt) => setUsername(evt.target.value)} />\n                                </th>\n                                <th className=\"st-description\">\n                                    Your login username.\n                                </th>\n                            </tr>\n                            <tr>\n                                <th className=\"st-label\">\n                                    Password\n                                </th>\n                                <th className=\"st-input-info\">\n                                    <Input.Password value={password} onChange={(evt) => setPassword(evt.target.value)} />\n                                </th>\n                                <th className=\"st-description\">\n                                    The password which you've entered in the previous step.\n                                </th>\n                            </tr>\n                            </tbody>\n                        </table>\n                        <div className=\"st-controller-finish\">\n                            <Button onClick={onSubmit}>Check</Button>\n                            <Button onClick={onSubmit}>Submit</Button>\n                        </div>\n                    </div>\n                </FinishWrapper>\n            </FadeIn>\n        </DatabaseWrapper>\n    )\n}\n","import React from 'react';\n//import SLogin from './../Sites/Login/Login';\nimport LoginPage from '../Containers/Pages/Login/Login';\nimport TestLogin from '../Containers/Pages/TestLogin/TestLogin';\nimport SetupPage from \"../Containers/Pages/Setup\";\n\nconst routes = [\n    {\n        path : '/',\n        exact : true,\n        main : () => <TestLogin/>\n    },\n    {\n        path : '/setup',\n        exact : true,\n        main : () => <SetupPage />\n    },\n];\n\nexport default routes;","import React from 'react';\nimport {\n    HomeOutlined,\n    UserOutlined,\n    ApartmentOutlined,\n    FolderOutlined,\n} from '@ant-design/icons';\n\nimport TextTranslation from '../TextTranslation/TextTranslation';\n\n\nconst LAMenu_Structure =\n[\n    {\n        \"key\" : \"homepage\",\n        \"displayName\" : <TextTranslation textName=\"LMenu-Homepage.1\"/>,\n        \"icon\" : <HomeOutlined/>,\n        \"to\" : \"/\"\n    },\n    {\n        \"key\" : \"personal\",\n        \"displayName\" : <TextTranslation textName=\"LMenu-Personal.1\"/>,\n        \"icon\" : <UserOutlined/>,\n        \"children\" : [\n            {\n                \"key\" : \"profile\",\n                \"displayName\" : <TextTranslation textName=\"LMenu-Profile.1\"/>,\n                \"to\" : \"/profile\"\n            },\n            {\n                \"key\" : \"schedule\",\n                \"displayName\" : <TextTranslation textName=\"LMenu-Schedule.1\"/>,\n                \"to\" : \"/schedule\"\n            },\n            {\n                \"key\" : \"inbox\",\n                \"displayName\" : <TextTranslation textName=\"LMenu-Inbox.1\"/>,\n                \"to\" : \"/inbox\"\n            },\n            {\n                \"key\" : \"sent\",\n                \"displayName\" : <TextTranslation textName=\"LMenu-Sent.1\"/>,\n                \"to\" : \"/sent\"\n            },\n            {\n                \"key\" : \"archive\",\n                \"displayName\" : <TextTranslation textName=\"LMenu-Archive.1\"/>,\n                \"to\" : \"/archive\"\n            }\n        ]\n    },\n    {\n        \"key\" : \"usage\",\n        \"displayName\" : <TextTranslation textName=\"LMenu-Usage.1\"/>,\n        \"icon\" : <ApartmentOutlined/>,\n        \"children\" : [\n            {\n                \"key\" : \"system\",\n                \"displayName\" : <TextTranslation textName=\"LMenu-System.1\"/>,\n                \"to\" : \"/system\"\n            },\n            {\n                \"key\" : \"users\",\n                \"displayName\" : <TextTranslation textName=\"LMenu-Users.1\"/>,\n                \"to\" : \"/users\"\n            },\n            {\n                \"key\" : \"visitation\",\n                \"displayName\" : <TextTranslation textName=\"LMenu-Visitation.1\"/>,\n                \"to\" : \"/visitation\"\n            },\n            \n        ]\n    },\n    {\n        \"key\" : \"classes\",\n        \"displayName\" : <TextTranslation textName=\"LMenu-Classes.1\"/>,\n        \"icon\" : <FolderOutlined/>,\n        \"children\" : [\n            \n        ]\n    },\n    \n\n];\n\nexport default LAMenu_Structure;","import React from 'react';\nimport './TopBar.css';\nimport { Avatar, Badge, Menu, Dropdown } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\n\nconst TopBar = () => {\n\n    const logout = () => {\n        localStorage.removeItem(\"userData\");\n        window.location.reload();\n    }\n\n    const menu = (\n      <Menu>\n        <Menu.Item key=\"0\" >\n          <a>Profile</a>\n        </Menu.Item>\n        <Menu.Item key=\"1\">\n          <a href=\"/settings\">Settings</a>\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n          <a href=\"/settings\">Activity Log</a>\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item key=\"3\" onClick={logout}>Logout</Menu.Item>\n      </Menu>\n  );\n\n    return(\n        \n        <div id=\"topbar-wrapper\">\n            <Dropdown overlay={menu} trigger={['click']}>\n                <span className=\"avatar-item\" id=\"topbar-avatar\" >\n                    <Badge count={1}>\n                    <Avatar shape=\"square\" icon={<UserOutlined />} />\n                    </Badge>\n                </span>\n            </Dropdown>\n        </div>\n    );\n    \n}\n\nexport default TopBar;\n","import React, {useState, useEffect} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport { Layout, Menu, Breadcrumb, message } from 'antd';\n\n\nimport './MainLayout.css';\n\nimport {NavLink} from 'react-router-dom';\nimport LAMenu_Structure from '../../Components/LAMenu/LAMenu_Structure';\n\nimport {updateClassData} from '../../Redux/Actions/updateClassData';\n\n\nimport {connect} from 'react-redux';\n\nimport TopBar from '../../Components/TopBar/TopBar';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst SiderDemo = (props) => {\n  \n    \n\n    const [resultMenuStructure, setResultMenuStructure] = useState([]);\n\n    const [classes, setClasses] = useState([]);\n\n    useEffect(()=>{\n        setResultMenuStructure(renderLAMenuStructure(LAMenu_Structure, false));\n    },[classes]);\n\n    useEffect(()=>{\n        fetch('https://api.kunbr0.com/se104/classes.php')\n            .then((response) => {\n                return response.json();\n            })\n\n\n            .then((classes) => {\n                console.log(classes);\n                \n                message.success('Loaded class data');\n                setClasses(classes);\n                props.dispatch(updateClassData(classes));\n\n\n                /*setTimeout(function() {\n                    document.body.classList.add(\"loaded\");\n                }, 500);*/\n            })\n            \n            .catch((error) => {\n\n            });\n            \n        }, []);\n\n\n    const renderLAMenuStructure = (kStruct, isSubMenu, parentMenu) =>{\n\n        let kElm = [];\n\n        for(let str of kStruct){\n\n            if(str.children){\n                kElm.push(renderLAMenuStructure(str.children, true, str));\n            }else{\n                kElm.push(\n                    <Menu.Item key={str.key} icon={str.icon}>\n                        <NavLink  to={str.to}>{str.displayName}</NavLink>\n                    </Menu.Item>);\n            }\n\n        }\n        if(isSubMenu){\n            let classesElm;\n            if(parentMenu.key === 'classes' && classes){\n                classesElm = classes.map((e)=>{\n                    return (\n                        <Menu.Item key={e.classID}>\n                            <NavLink to={`/class/${e.className}`}>{e.className}</NavLink>\n                        </Menu.Item>\n                    )\n                });\n                \n            }\n            return(\n                <SubMenu key={parentMenu.key} icon={parentMenu.icon} title={parentMenu.displayName}>\n                    {kElm}\n                    {classesElm}\n                </SubMenu>\n            );\n        }\n        return kElm;\n    }\n\n    const [collapsed, setCollapsed] = useState(false); \n\n    const onCollapse = collapsed => {\n        console.log(collapsed);\n        setCollapsed(collapsed);\n    };\n  \n    console.log(props);\n\n    return (\n        <Layout style={{ minHeight: '100vh' }}>\n        <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n            <div className=\"logo\" />\n            <Menu  theme=\"dark\" defaultSelectedKeys={['homepage']} mode=\"inline\" style={\n                {\n                    paddingTop : \"64px\"\n                }\n            }>\n            {resultMenuStructure}\n            </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n                <TopBar />\n            </Header>\n            <Content style={{ margin: '0 16px' }}>\n            <Breadcrumb style={{ margin: '16px 0' }}>\n                <Breadcrumb.Item>QLHS</Breadcrumb.Item>\n                <Breadcrumb.Item>Homepage</Breadcrumb.Item>\n            </Breadcrumb>\n            \n            <Switch>\n                {props.kRoutes}\n                <Route>\n                    <Redirect to={{pathname: '/'}}/>\n                </Route>\n            </Switch>\n            \n            </Content>\n            <Footer style={{ textAlign: 'center' }}>T9 Team ©2020 </Footer>\n        </Layout>\n        </Layout>\n    );\n  \n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        classData : state.classData\n    };\n}\n\nexport default connect(mapStateToProps)(SiderDemo);\n","\nexport const updateClassData = (classData)=>{\n    \n    return {\n        type : 'updateClassData',\n        classData : classData\n    }\n}","import React from 'react';\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\n//import LMenu from './../../Components/LMenu/LMenu';\n// import MLMenu from './../../Components/LMenu/MLMenu';\n// import TopBar from './../../Components/TopBar/TopBar';\n// import Loader from './../../MainLoader/Loader';\n// import LAMenu from './../../Components/LAMenu/LAMenu';\nimport MainLayout from './../MainLayout/MainLayout';\n\n\nconst LoggedRoutes = ({routes})=>{\n\n    const showRoutes = (routes) => {\n        var result = null;\n        //console.log(localStorage.getItem('user'));\n        if(routes.length > 0){\n            result = routes.map((route, index) => {\n                return (\n                    <Route \n                        key={index}\n                        path={route.path}\n                        exact={route.exact}\n                        component={route.main}\n                    />\n    \n                    \n                );\n                \n            })\n            \n        }\n        return result;\n    }\n    \n    \n\n    return (\n        <MainLayout kRoutes={showRoutes(routes)}/>\n    );\n}\n\nexport default LoggedRoutes;","import React from 'react';\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\n//   import LMenu from './../../Components/LMenu/LMenu';\n//   import MLMenu from './../../Components/LMenu/MLMenu';\n//   import TopBar from './../../Components/TopBar/TopBar';\n//   import Loader from './../../MainLoader/Loader';\n\n\n\n\nconst GuestRoutes = ({routes})=>{\n\n    const showRoutes = (routes) => {\n        var result = null;\n        //console.log(localStorage.getItem('user'));\n        if(routes.length > 0){\n            result = routes.map((route, index) => {\n                return (\n                    <Route \n                        key={index}\n                        path={route.path}\n                        exact={route.exact}\n                        component={route.main}\n                    />\n    \n                    \n                );\n                \n            })\n            \n        }\n        return result;\n    }\n    \n    \n\n    return (\n        <div>\n            <Switch>\n                {showRoutes(routes)}\n                <Route>\n                    <Redirect to={{pathname: '/'}}/>\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default GuestRoutes;","import React from 'react';\n\nimport loggedroutes from './../Routes/LoggedRoutes';\nimport guestroutes from './../Routes/GuestRoutes';\n\nimport LoggedRoutes from './LoggedRoutes/LoggedRoutes';\nimport GuestRoutes from './GuestRoutes/GuestRoutes';\nimport './App.css';\nimport {\n    BrowserRouter as Router,\n  } from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <Router>\n            { localStorage.getItem('userData') ?\n                <LoggedRoutes routes={loggedroutes}/> :\n                <GuestRoutes routes={guestroutes}/>\n            }\n        </Router>\n    );\n}\n\nexport default App;\n","const initialState = {\n    classData : []\n}\n\nconst ClassData = (state = initialState, action)=>{\n    console.log(action);\n    switch(action.type){\n        case 'updateClassData' : return {classData : action.classData};\n        default : return state;\n    }\n}\n\nexport default ClassData;","import actions from './actions'\nimport themes from \"../../Components/ThemeSwitcher/ThemeStore\";\n\nconst initState = {\n    current: themes.light\n}\n\nexport default function (state = initState, action) {\n    switch (action.type) {\n        case actions.CHANGE_THEME:\n            return {current: action.theme};\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport classData from './Reducers/classData';\nimport themeSwitcher from './ThemeSwitcher/reducers'\n\nexport default combineReducers({\n    classData,\n    themeSwitcher,\n});","import { all } from 'redux-saga/effects';\n\nexport default function* rootSaga(getState) {\n    yield all([\n    ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst promiseMiddleware = store => next => action => {\n    if (isPromise(action.payload)) {\n        const currentView = store.getState().viewChangeCounter;\n        const skipTracking = action.skipTracking;\n\n        action.payload.then(\n            res => {\n                const currentState = store.getState()\n                if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n                    return\n                }\n                action.payload = res;\n                store.dispatch(action);\n            },\n            error => {\n                const currentState = store.getState()\n                if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n                    return\n                }\n                action.error = true;\n                action.payload = error;\n                store.dispatch(action);\n            }\n        );\n\n        return;\n    }\n\n    next(action);\n};\nconst middlewares = [thunk, promiseMiddleware, sagaMiddleware];\n\nconst bindMiddleware = middleware => {\n    if (process.env.NODE_ENV !== 'production') {\n        const { composeWithDevTools } = require('redux-devtools-extension');\n        return composeWithDevTools(applyMiddleware(...middleware));\n    }\n    return applyMiddleware(...middleware);\n};\n\nfunction isPromise(v) {\n    return v && typeof v.then === 'function';\n}\n\nconst store = createStore(rootReducer, bindMiddleware(middlewares));\nsagaMiddleware.run(rootSaga);\nexport default store;\n","import React from 'react';\nimport FadeIn from \"react-fade-in\";\nimport Lottie from \"react-lottie\";\nimport * as maintenanceAnimation from \"./Assets/lotties/12366-under-construction\";\n\nconst maintenanceConfig = {\n  loop: true,\n  autoplay: true,\n  animationData: maintenanceAnimation.default,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n  }\n}\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n          <div className=\"h-100 d-flex justify-content-center align-items-center\">\n            <FadeIn>\n              <div className=\"align-items-center row\">\n                <Lottie options={maintenanceConfig} height={400} width={400} />\n              </div>\n              <h1>Website is under construction</h1>\n            </FadeIn>\n          </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport {ConfigProvider} from \"antd\";\nimport enUS from 'antd/es/locale/en_US';\nimport {ThemeProvider} from \"styled-components\";\nimport {useSelector} from \"react-redux\";\n\nexport default function AppProvider({children}) {\n\n    const currentTheme = useSelector(state => state.themeSwitcher.current);\n\n    return (\n        <ConfigProvider locale={enUS}>\n            <ThemeProvider theme={currentTheme}>\n                {children}\n            </ThemeProvider>\n        </ConfigProvider>\n    );\n}","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\nconst Languages = [\"en\", \"vi\", \"cn\"];\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    whitelist: Languages,\n    \n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport {Provider} from 'react-redux';\nimport store from \"./Redux/store\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport AppProvider from \"./AppProvider\";\nimport 'antd/dist/antd.css';\nimport './i18n';\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppProvider>\n            <ErrorBoundary>\n                <Suspense fallback=\"loading\">\n                    <App />\n                </Suspense>\n            </ErrorBoundary>\n        </AppProvider>\n    </Provider>\n    \n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}